import{BehaviorSubject as e,Subject as t}from"rxjs";import{Scene as i,AmbientLight as s,HemisphereLight as n,WebGLRenderer as o,sRGBEncoding as h,NoToneMapping as r,PerspectiveCamera as a,Box3 as l,Vector3 as d,WebGLRenderTarget as c,Color as g,MeshStandardMaterial as _,NoBlending as m,DoubleSide as u,Mesh as p,DirectionalLight as M,MeshPhysicalMaterial as f,NormalBlending as v}from"three";import{GLTFLoader as w}from"three/examples/jsm/loaders/GLTFLoader";import{DRACOLoader as S}from"three/examples/jsm/loaders/DRACOLoader";import{OrbitControls as P}from"three/examples/jsm/controls/OrbitControls";import{ResizeSensor as C}from"css-element-queries";var b=function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function h(e){try{a(s.next(e))}catch(e){o(e)}}function r(e){try{a(s.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(h,r)}a((s=s.apply(e,t||[])).next())}))};class E{constructor(e=null){this.dracoDecoderEnabled=!0,this.dracoDecoderPath="/assets/draco/",this.highlightingEnabled=!0,this.highlightingLatency=300,null!=e&&Object.assign(this,e)}}class y{constructor(i,s){if(this._initialized=new e(!1),this._modelLoadingStateChange=new e(!1),this._modelLoadingStart=new t,this._modelLoadingProgress=new t,this._modelLoadingEnd=new t,this._openedModelsChange=new e([]),this._selectionChange=new e(new Set),this._manualSelectionChange=new t,this._bakMatProp="materialBackup",this._colMatProp="materialColored",this._hlProp="highlighted",this._selProp="selected",this._isolProp="isolated",this._colProp="colored",this._subscriptions=[],this._highlightedMesh=null,this._selectedMeshes=[],this._isolatedMeshes=[],this._coloredMeshes=[],this._pickingColorToMesh=new Map,this._lastPickingColor=0,this._pointerEventHelper={downX:null,downY:null,maxDiff:10,mouseMoveTimer:null,waitForDouble:!1},this._loadingInProgress=!1,this._loadingQueue=[],this._loadedModelsByGuid=new Map,this._loadedMeshesById=new Map,this._onCanvasPointerDown=e=>{this._pointerEventHelper.downX=e.clientX,this._pointerEventHelper.downY=e.clientY},this._onCanvasPointerUp=e=>{const t=e.clientX,i=e.clientY;!this._pointerEventHelper.downX||Math.abs(t-this._pointerEventHelper.downX)>this._pointerEventHelper.maxDiff||Math.abs(i-this._pointerEventHelper.downY)>this._pointerEventHelper.maxDiff||(this._pointerEventHelper.waitForDouble?(this._selectedMeshes.length&&(this.isolateSelectedMeshes(),this.fitCameraToObjects(this._selectedMeshes)),this._pointerEventHelper.waitForDouble=!1):(this._pointerEventHelper.waitForDouble=!0,setTimeout(()=>{this._pointerEventHelper.waitForDouble=!1},300),this.selectMeshAtPoint(t,i,e.ctrlKey)),this._pointerEventHelper.downX=null,this._pointerEventHelper.downY=null)},this._onCanvasMouseMove=e=>{e.buttons||(clearTimeout(this._pointerEventHelper.mouseMoveTimer),this._pointerEventHelper.mouseMoveTimer=null,this._pointerEventHelper.mouseMoveTimer=window.setTimeout(()=>{const t=e.clientX,i=e.clientY;this.highlightMeshAtPoint(t,i)},this._options.highlightingLatency))},this._container=document.getElementById(i),!this._container)throw new Error("Container not found!");this._options=new E(s),this.init()}init(){this._containerResizeSensor=new C(this._container,()=>{this.updateContainerDimensions(),this.updateRendererSize()}),this.initObservables(),this.initRendererWithScene(),this.initSpecialMaterials(),this.initPickingScene(),this.initLoader(),this.addCanvasEventListeners(),this._initialized.next(!0)}destroy(){var e;this._subscriptions.forEach(e=>e.unsubscribe()),this.closeSubjects(),this._renderer&&this._renderer.dispose(),this._orbitControls&&this._orbitControls.dispose(),(null===(e=this._loader)||void 0===e?void 0:e.dracoLoader)&&this._loader.dracoLoader.dispose(),this._containerResizeSensor&&this._containerResizeSensor.detach()}openModels(e){(null==e?void 0:e.length)&&(e.forEach(e=>{this._loadingQueue.push(e)}),this.loadQueuedModelsAsync())}closeModels(e){(null==e?void 0:e.length)&&e.forEach(e=>{this.removeModelFromScene(e)})}selectItems(e){if(null==e?void 0:e.length){const{found:t,notFound:i}=this.findMeshesByIds(new Set(e));t.length&&this.selectMeshes(t,!1)}}isolateItems(e){if(null==e?void 0:e.length){const{found:t,notFound:i}=this.findMeshesByIds(new Set(e));t.length&&this.selectMeshes(t,!1,!0)}}colorItems(e){this.removeIsolation(),this.removeSelection(),this.colorMeshes(e)}getOpenedModels(){return this._openedModelsChange.getValue()}getSelectedItems(){return this._selectionChange.getValue()}initObservables(){this.initialized$=this._initialized.asObservable(),this.modelLoadingStateChange$=this._modelLoadingStateChange.asObservable(),this.modelLoadingStart$=this._modelLoadingStart.asObservable(),this.modelLoadingProgress$=this._modelLoadingProgress.asObservable(),this.modelLoadingEnd$=this._modelLoadingEnd.asObservable(),this.openedModelsChange$=this._openedModelsChange.asObservable(),this.selectionChange$=this._selectionChange.asObservable(),this.manualSelectionChange$=this._manualSelectionChange.asObservable()}closeSubjects(){this._initialized.complete(),this._modelLoadingStateChange.complete(),this._modelLoadingStart.complete(),this._modelLoadingProgress.complete(),this._modelLoadingEnd.complete(),this._openedModelsChange.complete(),this._selectionChange.complete(),this._manualSelectionChange.complete()}addCanvasEventListeners(){this._renderer.domElement.addEventListener("pointerdown",this._onCanvasPointerDown),this._renderer.domElement.addEventListener("pointerup",this._onCanvasPointerUp),this._options.highlightingEnabled&&this._renderer.domElement.addEventListener("mousemove",this._onCanvasMouseMove)}initRendererWithScene(){const e=new i,t=new s(2236962,1),l=new n(16777147,526368,1);l.translateY(2e3),e.add(t),e.add(l);const d=new o({alpha:!0,antialias:!0});d.setSize(this._containerWidth,this._containerHeight,!1),d.setClearColor(0,0),d.outputEncoding=h,d.physicallyCorrectLights=!1,d.toneMapping=r;const c=new a(75,this._containerWidth/this._containerHeight,.01,1e4),g=new P(c,d.domElement);g.addEventListener("change",()=>this.render()),c.position.set(0,1e3,1e3),c.lookAt(0,0,0),g.update(),this._container.append(d.domElement),this._renderer=d,this._mainScene=e,this._camera=c,this._orbitControls=g,this.render()}render(){this._renderer&&requestAnimationFrame(()=>this._renderer.render(this._mainScene,this._camera))}fitCameraToObjects(e,t=1.2){if(!(null==e?void 0:e.length))return;const i=new l;for(const t of e)i.expandByObject(t);const s=i.getSize(new d),n=i.getCenter(new d),o=Math.max(s.x,s.y,s.z)/(2*Math.atan(Math.PI*this._camera.fov/360)),h=o/this._camera.aspect,r=t*Math.max(o,h),a=this._orbitControls.target.clone().sub(this._camera.position).normalize().multiplyScalar(r);this._orbitControls.maxDistance=Math.max(10*r,1e4),this._orbitControls.target.copy(n),this._camera.near=Math.min(r/100,.01),this._camera.far=Math.max(100*r,1e4),this._camera.updateProjectionMatrix(),this._camera.position.copy(this._orbitControls.target).sub(a),this._orbitControls.update()}initPickingScene(){const e=new c(1,1),t=new i;t.background=new g(0),this._pickingTarget=e,this._pickingScene=t}nextPickingColor(){return++this._lastPickingColor}addMeshToPickingScene(e){const t=new _({color:new g(this.nextPickingColor()),emissive:new g(this._lastPickingColor),blending:m,flatShading:!0,side:u,roughness:1,metalness:0}),i=this._lastPickingColor.toString(16),s=new p(e.geometry,t);s.userData.originalUuid=e.uuid,s.userData.color=i,s.position.copy(e.position),s.rotation.copy(e.rotation),s.scale.copy(e.scale),this._pickingScene.add(s),this._pickingColorToMesh.set(i,e)}removeMeshFromPickingScene(e){const t=this._pickingScene.children.find(t=>t.userData.originalUuid===e.uuid);t&&(this._pickingScene.remove(t),this._pickingColorToMesh.delete(t.userData.color))}getPickingPosition(e,t){const i=this._renderer.domElement.getBoundingClientRect();return{x:(e-i.left)*this._renderer.domElement.width/i.width,y:(t-i.top)*this._renderer.domElement.height/i.height}}getItemAtPickingPosition(e){const t=this._renderer.getPixelRatio();this._camera.setViewOffset(this._renderer.getContext().drawingBufferWidth,this._renderer.getContext().drawingBufferHeight,e.x*t||0,e.y*t||0,1,1);const i=new M(16777215,1);i.position.set(-1,2,4),this._camera.add(i),this._renderer.setRenderTarget(this._pickingTarget),this._renderer.render(this._pickingScene,this._camera),this._renderer.setRenderTarget(null),this._camera.clearViewOffset(),this._camera.remove(i);const s=new Uint8Array(4);this._renderer.readRenderTargetPixels(this._pickingTarget,0,0,1,1,s);const n=s[0]<<16|s[1]<<8|s[2];return this._pickingColorToMesh.get(n.toString(16))}updateContainerDimensions(){const e=this._container.getBoundingClientRect();this._containerWidth=e.width,this._containerHeight=e.height}updateRendererSize(){this._renderer&&(this._camera.aspect=this._containerWidth/this._containerHeight,this._camera.updateProjectionMatrix(),this._renderer.setSize(this._containerWidth,this._containerHeight,!1),this.render())}initLoader(){const e=new w;if(this._options.dracoDecoderEnabled){const t=new S;t.setDecoderPath(this._options.dracoDecoderPath),t.preload(),e.setDRACOLoader(t)}this._loader=e,this.loadQueuedModelsAsync()}loadQueuedModelsAsync(){return b(this,void 0,void 0,(function*(){if(this._loader&&!this._loadingInProgress){for(this._loadingInProgress=!0,this._modelLoadingStateChange.next(!0);this._loadingQueue.length>0;){const{url:e,guid:t,name:i}=this._loadingQueue.shift();this._loadedModelsByGuid.has(t)||(yield this.loadModel(e,t,i))}this._modelLoadingStateChange.next(!1),this._loadingInProgress=!1}}))}loadModel(e,t,i){return b(this,void 0,void 0,(function*(){this.onModelLoadingStart(e,t);try{const s=yield this._loader.loadAsync(e,e=>this.onModelLoadingProgress(e));this.addModelToScene(s,t,i),this.onModelLoadingEnd(e,t)}catch(i){this.onModelLoadingEnd(e,t,i)}}))}onModelLoadingStart(e,t){this._modelLoadingStart.next({url:e,guid:t})}onModelLoadingProgress(e){const t=Math.round(e.loaded/e.total*100);this._modelLoadingProgress.next(t)}onModelLoadingEnd(e,t,i=null){i&&console.log(i),this._modelLoadingProgress.next(0),this._modelLoadingEnd.next({url:e,guid:t,error:i})}addModelToScene(e,t,i){if(!this._mainScene)return;const s=i||t,n=e.scene;n.userData.guid=t,n.name=s;const o=[],h=new Set;n.traverse(e=>{if(e instanceof p){const i=`${t}|${e.name}`;e.userData.id=i,e.userData.modelGuid=t,this.backupMeshMaterial(e),o.push(e),h.add(e.name),this._loadedMeshesById.has(i)?this._loadedMeshesById.get(i).push(e):this._loadedMeshesById.set(i,[e]),this.addMeshToPickingScene(e)}}),this._mainScene.add(n),this._loadedModelsByGuid.set(t,{gltf:e,meshes:o,handles:h,name:s}),this.emitOpenedModelsChanged(),this.fitCameraToObjects([this._mainScene]),this.render()}removeModelFromScene(e){if(!this._mainScene||!this._loadedModelsByGuid.has(e))return;const t=this._loadedModelsByGuid.get(e);t.meshes.forEach(e=>{this._loadedMeshesById.delete(e.userData.id),this.removeMeshFromPickingScene(e)}),this._highlightedMesh=null,this._selectedMeshes=this._selectedMeshes.filter(t=>t.userData.modelGuid!==e),this._isolatedMeshes=this._isolatedMeshes.filter(t=>t.userData.modelGuid!==e),this._coloredMeshes=this._coloredMeshes.filter(t=>t.userData.modelGuid!==e),this._mainScene.remove(t.gltf.scene),this._loadedModelsByGuid.delete(e),this.emitOpenedModelsChanged(),this.render()}emitOpenedModelsChanged(){const e=[];for(const[t,i]of this._loadedModelsByGuid)e.push({guid:t,name:i.name,handles:i.handles});this._openedModelsChange.next(e)}findMeshesByIds(e){const t=[],i=new Set;return e.forEach(e=>{this._loadedMeshesById.has(e)?t.push(...this._loadedMeshesById.get(e)):i.add(e)}),{found:t,notFound:i}}removeSelection(){for(const e of this._selectedMeshes)e[this._selProp]=void 0,this.refreshMeshMaterial(e);this._selectedMeshes.length=0}removeIsolation(){for(const e of this._isolatedMeshes)e[this._isolProp]=void 0,this.refreshMeshMaterial(e);this._isolatedMeshes.length=0}selectMeshAtPoint(e,t,i=!1){const s=this.getPickingPosition(e,t),n=this.getItemAtPickingPosition(s);n?i?n[this._selProp]?this.removeFromSelection(n):this.addToSelection(n):this.selectMeshes([n],!0):this.selectMeshes([],!0)}addToSelection(e){const t=[e,...this._selectedMeshes];return this.selectMeshes(t,!0),!0}removeFromSelection(e){const t=this._selectedMeshes.filter(t=>t!==e);return this.selectMeshes(t,!0),!0}selectMeshes(e,t,i=!1){if(this.removeSelection(),this.removeIsolation(),!(null==e?void 0:e.length))return this.emitSelectionChanged(t),null;e.forEach(e=>{e[this._selProp]=!0,this.refreshMeshMaterial(e)}),i&&this.isolateSelectedMeshes(),this._selectedMeshes=e,this.emitSelectionChanged(t)}isolateSelectedMeshes(){[...this._loadedMeshesById.values()].flatMap(e=>e).forEach(e=>{e[this._selProp]||(e[this._isolProp]=!0,this.refreshMeshMaterial(e),this._isolatedMeshes.push(e))})}emitSelectionChanged(e){e||this.fitCameraToObjects(this._selectedMeshes),this.render();const t=new Set;this._selectedMeshes.forEach(e=>t.add(e.userData.id)),this._selectionChange.next(t),e&&this._manualSelectionChange.next(t)}highlightMeshAtPoint(e,t){const i=this.getPickingPosition(e,t),s=this.getItemAtPickingPosition(i);this.highlightItem(s)}highlightItem(e){e!==this._highlightedMesh&&(this.removeHighlighting(),e&&(e[this._hlProp]=!0,this.refreshMeshMaterial(e),this._highlightedMesh=e),this.render())}removeHighlighting(){if(this._highlightedMesh){const e=this._highlightedMesh;e[this._hlProp]=void 0,this.refreshMeshMaterial(e),this._highlightedMesh=null}}colorMeshes(e){if(this.removeColoring(),null==e?void 0:e.length)for(const t of e){const e=new f({color:new g(t.color),emissive:new g(0),blending:v,flatShading:!0,side:u,roughness:1,metalness:0});t.ids.forEach(t=>{const i=this._loadedMeshesById.get(t);(null==i?void 0:i.length)&&i.forEach(t=>{t[this._colProp]=!0,t[this._colMatProp]=e,t.material=e,this._coloredMeshes.push(t)})})}this.render()}removeColoring(){for(const e of this._coloredMeshes)e[this._colProp]=void 0,this.refreshMeshMaterial(e);this._coloredMeshes.length=0}initSpecialMaterials(){const e=new f({color:new g(16711680),emissive:new g(16711680),blending:v,flatShading:!0,side:u,roughness:1,metalness:0}),t=new f({color:new g(16776960),emissive:new g(0),blending:v,flatShading:!0,side:u,roughness:1,metalness:0}),i=new f({color:new g(5592405),emissive:new g(0),blending:v,flatShading:!0,side:u,roughness:1,metalness:0,opacity:.2,transparent:!0});this._selectionMaterial=e,this._highlightMaterial=t,this._isolationMaterial=i}backupMeshMaterial(e){e[this._bakMatProp]=e.material}refreshMeshMaterial(e){e[this._hlProp]?e.material=this._highlightMaterial:e[this._selProp]?e.material=this._selectionMaterial:e[this._isolProp]?e.material=this._isolationMaterial:e[this._colProp]?e.material=e[this._colMatProp]:e.material=e[this._bakMatProp]}}export{y as GltfViewer,E as GltfViewerOptions};
