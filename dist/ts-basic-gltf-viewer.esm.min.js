import{BehaviorSubject as e,Subject as t,AsyncSubject as s}from"rxjs";import{first as i}from"rxjs/operators";import{Color as n,MeshPhysicalMaterial as o,NormalBlending as r,DoubleSide as h,MeshPhongMaterial as a,MeshBasicMaterial as l,LineBasicMaterial as d,Vector3 as c,Mesh as u,SphereBufferGeometry as g,BoxBufferGeometry as m,Line as _,BufferGeometry as p,Scene as M,Uint32BufferAttribute as y,Uint8BufferAttribute as f,Float32BufferAttribute as v,Box3 as w,Raycaster as C,Triangle as b,WebGLRenderTarget as S,Vector2 as x,NoBlending as P,PerspectiveCamera as E,AmbientLight as A,HemisphereLight as B,DirectionalLight as L,WebGLRenderer as R,sRGBEncoding as k,NoToneMapping as I,MeshStandardMaterial as T}from"three";import{GLTFLoader as U}from"three/examples/jsm/loaders/GLTFLoader";import{DRACOLoader as D}from"three/examples/jsm/loaders/DRACOLoader";import{ResizeSensor as F}from"css-element-queries";import{ConvexHull as O}from"three/examples/jsm/math/ConvexHull";import{OrbitControls as z}from"three/examples/jsm/controls/OrbitControls";class G{static get default(){return{downX:null,downY:null,maxDiff:10,mouseMoveTimer:null,waitForDouble:!1}}}class H{constructor(e,t,s,i=0,n=!1){this.x=e,n?(this.y=-s,this.z=t):(this.y=t,this.z=s),this.w=i}static getDistance(e,t){const s=t.x-e.x,i=t.y-e.y,n=t.z-e.z,o=Math.sqrt(s*s+i*i+n*n);return new H(s,i,n,o)}}class ${constructor(e,t,s){this.start=new H(e.x,e.y,e.z,0,s),this.end=new H(t.x,t.y,t.z,0,s),this.distance=H.getDistance(this.start,this.end)}}class N{constructor(e=null){this.useAntialiasing=!1,this.usePhysicalLights=!1,this.ambientLightIntensity=1,this.hemiLightIntensity=.4,this.dirLightIntensity=.6,this.highlightingEnabled=!0,this.highlightColor=16776960,this.selectionColor=16711680,this.isolationColor=5592405,this.isolationOpacity=.2,this.meshMergeType=null,this.fastRenderType=null,null!=e&&Object.assign(this,e)}}class j{constructor(e,t,s,i,n,o){this.r=e,this.g=t,this.b=s,this.roughness=i,this.metalness=n,this.opacity=o}get rByte(){return 255*this.r}get gByte(){return 255*this.g}get bByte(){return 255*this.b}get roughnessByte(){return 255*this.roughness}get metalnessByte(){return 255*this.metalness}get opacityByte(){return 255*this.opacity}static createFromMaterial(e){return new j(e.color.r,e.color.g,e.color.b,e.roughness,e.metalness,e.opacity)}static deleteFromMesh(e,t=!1,s=!1){e[j.prop]=null,t&&(e[j.customProp]=null),s&&(e[j.defaultProp]=null)}static getDefaultFromMesh(e){return e[j.defaultProp]||(e[j.defaultProp]=j.createFromMaterial(e.material)),e[j.defaultProp]}static getCustomFromMesh(e){return e[j.customProp]}static getFromMesh(e){return e[j.prop]?e[j.prop]:e[j.customProp]?e[j.customProp]:j.getDefaultFromMesh(e)}static setCustomToMesh(e,t){e[j.customProp]=t}static setToMesh(e,t){e[j.prop]=t}toString(){return`${this.r}|${this.g}|${this.b}|${this.roughness}|${this.metalness}|${this.opacity}`}}j.prop="rgbrmo",j.customProp="rgbrmoC",j.defaultProp="rgbrmoD";class X{constructor(e,t,s,i){this._materials=new Map,this._isolationColor=this.buildIsolationColor(e,t),this._selectionColor=new n(s),this._highlightColor=new n(i),this._globalMaterial=this.buildGlobalMaterial(),this._simpleMaterial=this.buildSimpleMaterial(),this._markerMaterials=new Array(3),this._markerMaterials[0]=this.buildMarkerMaterial(16711935),this._markerMaterials[1]=this.buildMarkerMaterial(3740293),this._markerMaterials[2]=this.buildMarkerMaterial(65535),this._lineMaterials=new Array(1),this._lineMaterials[0]=this.buildLineMaterial(255,3)}get globalMaterial(){return this._globalMaterial}get simpleMaterial(){return this._simpleMaterial}get markerMaterials(){return this._markerMaterials}get lineMaterials(){return this._lineMaterials}get materials(){return[...this._materials.values()]}updateColors(e,t,s,i){this._isolationColor=this.buildIsolationColor(e,t),this._selectionColor=new n(s),this._highlightColor=new n(i)}updateMaterials(){this._globalMaterial.needsUpdate=!0,this._simpleMaterial.needsUpdate=!0,this._materials.forEach(e=>e.needsUpdate=!0)}destroy(){var e,t;this._globalMaterial.dispose(),this._globalMaterial=null,this._simpleMaterial.dispose(),this._simpleMaterial=null,null===(e=this._markerMaterials)||void 0===e||e.forEach(e=>e.dispose),this._markerMaterials=null,null===(t=this._lineMaterials)||void 0===t||t.forEach(e=>e.dispose),this._markerMaterials=null,this._materials.forEach(e=>e.dispose()),this._materials=null}refreshMeshColors(e){const t=j.getFromMesh(e);e.userData.isolated||j.deleteFromMesh(e);const s=j.getFromMesh(e);let i;return i=e.userData.highlighted?new j(this._highlightColor.r,this._highlightColor.g,this._highlightColor.b,s.roughness,s.metalness,s.opacity):e.userData.selected?new j(this._selectionColor.r,this._selectionColor.g,this._selectionColor.b,s.roughness,s.metalness,s.opacity):e.userData.isolated?this._isolationColor:s,j.setToMesh(e,i),{rgbRmo:i,opacityChanged:i.opacity!==t.opacity}}getMaterial(e){const t=e.toString();if(this._materials.has(t))return this._materials.get(t);const s=this.buildStandardMaterial(e);return this._materials.set(t,s),s}buildIsolationColor(e,t){const s=new n(e);return new j(s.r,s.g,s.b,1,0,t)}buildGlobalMaterial(){const e=new o({vertexColors:!0,flatShading:!0,blending:r,side:h,transparent:!0});return e.onBeforeCompile=e=>{e.vertexShader="\n        attribute vec3 rmo;        \n        varying float roughness;\n        varying float metalness;\n        varying float opacity;\n        "+e.vertexShader,e.vertexShader=e.vertexShader.replace("void main() {","\n        void main() {\n          roughness = rmo.x;\n          metalness = rmo.y;\n          opacity = rmo.z;\n        "),e.fragmentShader=e.fragmentShader.replace("uniform float roughness;","varying float roughness;"),e.fragmentShader=e.fragmentShader.replace("uniform float metalness;","varying float metalness;"),e.fragmentShader=e.fragmentShader.replace("uniform float opacity;","varying float opacity;")},e}buildSimpleMaterial(){return new a({color:8421504,transparent:!1,flatShading:!0,blending:r,side:h})}buildStandardMaterial(e){return new o({blending:r,side:h,flatShading:!0,color:new n(e.r,e.g,e.b),transparent:1!==e.opacity,roughness:e.roughness,metalness:e.metalness,opacity:e.opacity})}buildMarkerMaterial(e){return new l({color:e})}buildLineMaterial(e,t){return new d({color:e,linewidth:t})}}var Q=function(e,t,s,i){return new(s||(s=Promise))((function(n,o){function r(e){try{a(i.next(e))}catch(e){o(e)}}function h(e){try{a(i.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,h)}a((i=i.apply(e,t||[])).next())}))};class q{constructor(e){if(this._geometries=[],this._markers=new Map,this._segments=new Map,this._geometryIndexBySourceMesh=new Map,this._sourceMeshesByGeometryIndex=new Map,this._renderMeshBySourceMesh=new Map,this._geometryIndicesNeedSort=new Set,!e)throw new Error("ColorRgbRmoUtils is undefined!");this._colorRgbRmoUtils=e,this.buildMarkers(),this.buildSegments()}get scene(){return this._scene}get geometries(){return this._geometries}get meshes(){return[...this._renderMeshBySourceMesh.values()]}destroy(){var e,t,s;this._scene=null,null===(e=this._geometries)||void 0===e||e.forEach(e=>e.geometry.dispose()),this._geometries=null,null===(t=this._markers)||void 0===t||t.forEach(e=>e.mesh.geometry.dispose()),this._markers=null,null===(s=this._segments)||void 0===s||s.forEach(e=>e.line.geometry.dispose()),this._segments=null}updateSceneAsync(e,t,s,i){return Q(this,void 0,void 0,(function*(){this.deleteScene(),yield this.createSceneAsync(e,t,s,i)}))}updateMeshColors(e){this._currentMergeType?this.updateMeshGeometryColors(e):this.updateMeshMaterials(e),this.sortGeometryIndicesByOpacity()}setMarker(e,t){const s=this._markers.get(e);s.active||(this.scene.add(s.mesh),s.active=!0),s.mesh.position.set(t.x,t.y,t.z)}resetMarker(e){const t=this._markers.get(e);t.active&&(this.scene.remove(t.mesh),t.active=!1,t.mesh.position.set(0,0,0))}resetMarkers(){[...this._markers.keys()].forEach(e=>this.resetMarker(e))}setSegment(e,t,s){const i=this._segments.get(e);i.active||(this.scene.add(i.line),i.active=!0),i.line.geometry.setFromPoints([t,s])}resetSegment(e){const t=this._segments.get(e);t.active&&(this.scene.remove(t.line),t.active=!1,t.line.geometry.setFromPoints([new c,new c]))}resetSegments(){[...this._segments.keys()].forEach(e=>this.resetSegment(e))}buildMarkers(){this._markers.set("temp",{mesh:new u(new g(.1,16,8),this._colorRgbRmoUtils.markerMaterials[0]),active:!1,type:"temp"}),this._markers.set("start",{mesh:new u(new g(.1,4,2),this._colorRgbRmoUtils.markerMaterials[1]),active:!1,type:"start"}),this._markers.set("end",{mesh:new u(new m(.2,.2,.2),this._colorRgbRmoUtils.markerMaterials[2]),active:!1,type:"end"})}buildSegments(){const e=new _((new p).setFromPoints([new c,new c]),this._colorRgbRmoUtils.lineMaterials[0]);e.frustumCulled=!1,this._segments.set("distance",{line:e,active:!1,type:"distance"})}deleteScene(){this._geometries.forEach(e=>e.geometry.dispose()),this._geometries.length=0,this._geometryIndexBySourceMesh.clear(),this._sourceMeshesByGeometryIndex.clear(),this._renderMeshBySourceMesh.clear(),this._geometryIndicesNeedSort.clear(),this._markers.forEach(e=>e.active=!1),this._segments.forEach(e=>e.active=!1),this._scene=null}createSceneAsync(e,t,s,i){return Q(this,void 0,void 0,(function*(){const n=new M;if(n.add(...e),i){const e=yield this.groupModelMeshesByMergeType(t,s,i);for(const t of e)if(t.length){const e=yield this.buildRenderGeometryAsync(t);if(!e)continue;this._geometries.push(e);const s=this._geometries.length-1;this._sourceMeshesByGeometryIndex.set(s,t),this._geometryIndicesNeedSort.add(s),t.forEach(e=>{this._geometryIndexBySourceMesh.set(e,s)})}this._geometries.forEach(e=>{const t=new u(e.geometry,this._colorRgbRmoUtils.globalMaterial);n.add(t)})}else t.forEach(e=>{const t=j.getFromMesh(e),s=this._colorRgbRmoUtils.getMaterial(t),i=new u(e.geometry,s);i.applyMatrix4(e.matrix),this._renderMeshBySourceMesh.set(e,i),n.add(i)});this._currentMergeType=i,this._scene=n}))}groupModelMeshesByMergeType(e,t,s){return Q(this,void 0,void 0,(function*(){let i;switch(s){case"scene":i=[e];break;case"model":i=t.map(e=>e.meshes).filter(e=>e.length);break;case"model+":i=[];const s=1e3;t.map(e=>e.meshes).filter(e=>e.length).forEach(e=>{if(e.length<=s)i.push(e);else for(let t=0;t<e.length;t+=s){const n=e.slice(t,t+s);i.push(n)}});break;default:i=[]}return i}))}buildRenderGeometryAsync(e){return Q(this,void 0,void 0,(function*(){let t=0,s=0;if(e.forEach(e=>{t+=3*e.geometry.getAttribute("position").count,s+=e.geometry.getIndex().count}),0===t)return null;const i=new y(new Uint32Array(s),1),n=new f(new Uint8Array(t),3,!0),o=new f(new Uint8Array(t),3,!0),r=new v(new Float32Array(t),3),h=new Map;let a=0,l=0;for(let t=0;t<e.length;t+=100)yield new Promise(s=>{setTimeout(()=>{e.slice(t,t+100).forEach(e=>{const t=e.geometry.clone().applyMatrix4(e.matrix),s=t.getAttribute("position").array,d=t.getIndex().array,c=new Uint32Array(d.length);h.set(e,c);for(let e=0;e<d.length;e++){const t=d[e]+a;i.setX(l++,t),c[e]=t}for(let t=0;t<s.length;){const i=j.getFromMesh(e);n.setXYZ(a,i.rByte,i.gByte,i.bByte),o.setXYZ(a,i.roughnessByte,i.metalnessByte,i.opacityByte),r.setXYZ(a++,s[t++],s[t++],s[t++])}t.dispose()}),s()},0)});const d=new p;return d.setIndex(i),d.setAttribute("color",n),d.setAttribute("rmo",o),d.setAttribute("position",r),{geometry:d,positions:r,colors:n,rmos:o,indices:i,indicesBySourceMesh:h}}))}updateMeshMaterials(e){e.forEach(e=>{const{rgbRmo:t}=this._colorRgbRmoUtils.refreshMeshColors(e),s=this._colorRgbRmoUtils.getMaterial(t);this._renderMeshBySourceMesh.get(e).material=s})}updateMeshGeometryColors(e){const t=new Map;e.forEach(e=>{const s=this._geometryIndexBySourceMesh.get(e);t.has(s)?t.get(s).push(e):t.set(s,[e])}),t.forEach((e,t)=>{this.updateGeometryColors(t,e)})}updateGeometryColors(e,t){const{colors:s,rmos:i,indicesBySourceMesh:n}=this._geometries[e];let o=!1;t.forEach(e=>{const{rgbRmo:t,opacityChanged:r}=this._colorRgbRmoUtils.refreshMeshColors(e);n.get(e).forEach(e=>{s.setXYZ(e,t.rByte,t.gByte,t.bByte),i.setXYZ(e,t.roughnessByte,t.metalnessByte,t.opacityByte)}),!o&&r&&(o=!0)}),s.needsUpdate=!0,i.needsUpdate=!0,o&&this._geometryIndicesNeedSort.add(e)}sortGeometryIndicesByOpacity(){this._geometryIndicesNeedSort.forEach(e=>{const t=this._sourceMeshesByGeometryIndex.get(e),s=[],i=[];t.forEach(e=>{1===j.getFromMesh(e).opacity?s.push(e):i.push(e)});const{indices:n,indicesBySourceMesh:o}=this._geometries[e];let r=0;s.forEach(e=>{o.get(e).forEach(e=>{n.setX(r++,e)})}),i.forEach(e=>{o.get(e).forEach(e=>{n.setX(r++,e)})}),n.needsUpdate=!0}),this._geometryIndicesNeedSort.clear()}}var Y=function(e,t,s,i){return new(s||(s=Promise))((function(n,o){function r(e){try{a(i.next(e))}catch(e){o(e)}}function h(e){try{a(i.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,h)}a((i=i.apply(e,t||[])).next())}))};class W{constructor(e){if(this._boxIndices=[0,1,3,3,1,2,1,5,2,2,5,6,5,4,6,6,4,7,4,0,7,7,0,3,3,2,7,7,2,6,4,5,0,0,5,1],this._geometries=[],!e)throw new Error("ColorRgbRmoUtils is undefined!");this._colorRgbRmoUtils=e}get scene(){return this._scene}get geometries(){return this._geometries}destroy(){var e;null===(e=this._geometries)||void 0===e||e.forEach(e=>e.dispose()),this._geometries=null,this._scene=null}clearScene(){this._scene=null}updateSceneAsync(e,t,s){return Y(this,void 0,void 0,(function*(){this._scene=null;const i=new M;let n;switch(i.add(...e),this._geometries.forEach(e=>e.dispose()),this._geometries.length=0,s){case"ch":n=yield this.buildHullGeometryAsync(t);break;case"aabb":n=yield this.buildBoxGeometryAsync(t);break;case"ombb":default:throw new Error("Render type not implemented")}n&&this._geometries.push(n),this._geometries.forEach(e=>{const t=new u(e,this._colorRgbRmoUtils.simpleMaterial);i.add(t)}),this._scene=i}))}buildHullGeometryAsync(e){return Y(this,void 0,void 0,(function*(){if(!(null==e?void 0:e.length))return null;const t=[];for(let s=0;s<e.length;s+=100)yield new Promise(i=>{setTimeout(()=>{e.slice(s,s+100).forEach(e=>{(new O).setFromObject(e).faces.forEach(e=>{let s=e.edge;do{t.push(s.head().point),s=s.next}while(s!==e.edge)})}),i()},0)});const s=new Uint32Array(t.length);let i=0;const n=new Map,o=[];t.forEach((e,t)=>{const r=`${e.x}|${e.y}|${e.z}`;n.has(r)?s[t]=n.get(r):(s[t]=i,n.set(r,i++),o.push(e))});const r=new Float32Array(3*o.length);let h=0;o.forEach(e=>{r[h++]=e.x,r[h++]=e.y,r[h++]=e.z});const a=new v(r,3),l=new y(s,1),d=new p;return d.setAttribute("position",a),d.setIndex(l),d}))}buildBoxGeometryAsync(e){return Y(this,void 0,void 0,(function*(){if(!(null==e?void 0:e.length))return null;const t=new Float32Array(8*e.length*3),s=new Uint32Array(12*e.length*3);let i=0,n=0;const o=e=>{e.forEach(e=>{const o=this.getMeshBoxPositions(e),r=i/3;for(let e=0;e<o.length;e++)t[i++]=o[e];this._boxIndices.forEach(e=>s[n++]=r+e)})};for(let t=0;t<e.length;t+=100)yield new Promise(s=>{setTimeout(()=>{o(e.slice(t,t+100)),s()},0)});const r=new v(t,3),h=new y(s,1),a=new p;return a.setAttribute("position",r),a.setIndex(h),a}))}getMeshBoxPositions(e){const t=(new w).setFromBufferAttribute(e.geometry.getAttribute("position")),s=new Float32Array(24);s[0]=t.min.x,s[1]=t.min.y,s[2]=t.max.z,s[3]=t.max.x,s[4]=t.min.y,s[5]=t.max.z,s[6]=t.max.x,s[7]=t.max.y,s[8]=t.max.z,s[9]=t.min.x,s[10]=t.max.y,s[11]=t.max.z,s[12]=t.min.x,s[13]=t.min.y,s[14]=t.min.z,s[15]=t.max.x,s[16]=t.min.y,s[17]=t.min.z,s[18]=t.max.x,s[19]=t.max.y,s[20]=t.min.z,s[21]=t.min.x,s[22]=t.max.y,s[23]=t.min.z;return new v(s,3).applyMatrix4(e.matrix).array}}class V{constructor(){this.raycaster=new C}destroy(){}getPoint(e,t,s){this.raycaster.setFromCamera(s,e);const i=this.raycaster.intersectObject(t)[0];if(!i)return null;const n=(new c).copy(i.point);i.object.worldToLocal(n);const o=(new c).copy(this.getNearestVertex(t,n,i.face));return o?(i.object.localToWorld(o),o):null}getNearestVertex(e,t,s){const i=(new c).fromBufferAttribute(e.geometry.attributes.position,s.a),n=(new c).fromBufferAttribute(e.geometry.attributes.position,s.b),o=(new c).fromBufferAttribute(e.geometry.attributes.position,s.c),r=new c;return new b(i,n,o).getBarycoord(t,r),r.x>r.y&&r.x>r.z?i:r.y>r.x&&r.y>r.z?n:r.z>r.x&&r.z>r.y?o:null}}class Z{constructor(){this._lastPickingColor=0,this._materials=[],this._releasedMaterials=[],this._pickingMeshById=new Map,this._sourceMeshByPickingColor=new Map;const e=new M;e.background=new n(0),this._scene=e,this._target=new S(1,1),this._pointSnap=new V}destroy(){this._materials.forEach(e=>e.dispose()),this._materials=null,this._target.dispose(),this._target=null}add(e){const t=this.getMaterial(),s=t.color.getHex().toString(16),i=new u(e.geometry,t);i.userData.originalUuid=e.uuid,i.userData.color=s,i.position.copy(e.position),i.rotation.copy(e.rotation),i.scale.copy(e.scale),this._scene.add(i),this._pickingMeshById.set(e.uuid,i),this._sourceMeshByPickingColor.set(s,e)}remove(e){const t=this._pickingMeshById.get(e.uuid);t&&(this._scene.remove(t),this._pickingMeshById.delete(e.uuid),this._sourceMeshByPickingColor.delete(t.userData.color),this.releaseMaterial(t.material))}getSourceMeshAt(e,t,s,i){const n=this.convertClientToCanvas(t,s,i);return this.getSourceMeshAtPosition(e,t,n)}getSnapPointAt(e,t,s,i){const n=this.convertClientToCanvas(t,s,i),o=this.getSourceMeshAtPosition(e,t,n);return o?this.getMeshSnapPointAtPosition(e,t,n,this._pickingMeshById.get(o.uuid)):null}convertClientToCanvas(e,t,s){const i=e.domElement.getBoundingClientRect(),n=e.getPixelRatio(),o=(t-i.left)*(e.domElement.width/i.width)*n||0,r=(s-i.top)*(e.domElement.height/i.height)*n||0;return new x(o,r)}convertWorldToCanvas(e,t,s){const i=(new c).copy(s).project(e);if(i.x>1||i.y<-1||i.y>1||i.y<-1)return null;const n=t.domElement.getBoundingClientRect(),o=t.domElement.width/(t.domElement.width/n.width)||0,r=t.domElement.height/(t.domElement.height/n.height)||0,h=(i.x+1)*o/2,a=(i.y-1)*r/-2;return new x(h,a)}getSourceMeshAtPosition(e,t,s){const i=t.getContext();e.setViewOffset(i.drawingBufferWidth,i.drawingBufferHeight,s.x,s.y,1,1),t.setRenderTarget(this._target),t.render(this._scene,e),t.setRenderTarget(null),e.clearViewOffset();const n=new Uint8Array(4);t.readRenderTargetPixels(this._target,0,0,1,1,n);const o=(n[0]<<16|n[1]<<8|n[2]).toString(16);return this._sourceMeshByPickingColor.get(o)}getMeshSnapPointAtPosition(e,t,s,i){const n=t.getContext(),o=s.x/n.drawingBufferWidth*2-1,r=s.y/n.drawingBufferHeight*-2+1;return this._pointSnap.getPoint(e,i,new x(o,r))}nextPickingColor(){return 16777215===this._lastPickingColor&&(this._lastPickingColor=0),++this._lastPickingColor}getMaterial(){if(this._releasedMaterials.length)return this._releasedMaterials.pop();const e=new n(this.nextPickingColor()),t=new l({color:e,flatShading:!0,blending:P,side:h});return this._materials.push(t),t}releaseMaterial(e){this._releasedMaterials.push(e)}}class K{constructor(e,t){const s=new E(75,1,1,1e4),i=new z(s,e);i.addEventListener("change",t),s.position.set(0,1e3,1e3),s.lookAt(0,0,0),i.update(),this._changeCallback=t,this._camera=s,this._orbitControls=i}get camera(){return this._camera}changeCanvas(e){this._orbitControls.dispose(),this._orbitControls=new z(this.camera,e),this._orbitControls.addEventListener("change",this._changeCallback),this._lastFocusBox&&this.focusCameraOnBox(this._lastFocusBox)}destroy(){this._orbitControls.dispose()}resize(e,t){this._camera&&(this._camera.aspect=e/t,this._camera.updateProjectionMatrix())}focusCameraOnObjects(e,t=1.2){if(!(null==e?void 0:e.length))return;const s=new w;for(const t of e)s.expandByObject(t);this._lastFocusBox=s,this.focusCameraOnBox(s)}focusCameraOnBox(e){const t=e.getSize(new c),s=e.getCenter(new c),i=Math.max(t.x,t.y,t.z)/(2*Math.atan(Math.PI*this._camera.fov/360)),n=i/this._camera.aspect,o=1.2*Math.max(i,n),r=this._orbitControls.target.clone().sub(this._camera.position).normalize().multiplyScalar(o);this._orbitControls.maxDistance=Math.max(10*o,1e4),this._orbitControls.target.copy(s),this._camera.near=Math.min(o/100,1),this._camera.far=Math.max(100*o,1e4),this._camera.updateProjectionMatrix(),this._camera.position.copy(this._orbitControls.target).sub(r),this._orbitControls.update()}}class J{constructor(e,t,s,i){const n=new A(2236962,e?t*Math.PI:t);this._ambientLight=n;const o=new B(16777147,526368,e?s*Math.PI:s);o.position.set(0,2e3,0),this._hemisphereLight=o;const r=new L(16777215,e?i*Math.PI:i);r.position.set(-2,10,2),this._directionalLight=r}update(e,t,s,i){this._ambientLight.intensity=e?t*Math.PI:t,this._hemisphereLight.intensity=e?s*Math.PI:s,this._directionalLight.intensity=e?i*Math.PI:i}getLights(){return[this._ambientLight,this._hemisphereLight,this._directionalLight]}getCopy(){return[(new A).copy(this._ambientLight),(new B).copy(this._hemisphereLight),(new L).copy(this._directionalLight)]}}var ee=function(e,t,s,i){return new(s||(s=Promise))((function(n,o){function r(e){try{a(i.next(e))}catch(e){o(e)}}function h(e){try{a(i.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,h)}a((i=i.apply(e,t||[])).next())}))};class te{constructor(s,i,n){if(this._optionsChange=new e(null),this._loadingStateChange=new e(!1),this._modelLoadingStart=new t,this._modelLoadingEnd=new t,this._modelLoadingProgress=new t,this._openedModelsChange=new e([]),this._selectionChange=new e(new Set),this._manualSelectionChange=new t,this._lastFrameTime=new e(0),this._snapPointChange=new t,this._distanceMeasureChange=new t,this._subscriptions=[],this._measureMode=!1,this._measurePoints={start:null,end:null},this._meshesNeedColorUpdate=new Set,this._pointerEventHelper=G.default,this._queuedColoring=null,this._queuedSelection=null,this._highlightedMesh=null,this._selectedMeshes=[],this._isolatedMeshes=[],this._coloredMeshes=[],this._loadingInProgress=!1,this._loadingQueue=[],this._loadedModels=new Set,this._loadedModelsByGuid=new Map,this._loadedModelsArray=[],this._loadedMeshes=new Set,this._loadedMeshesById=new Map,this._loadedMeshesArray=[],this.onCanvasPointerDown=e=>{this._pointerEventHelper.downX=e.clientX,this._pointerEventHelper.downY=e.clientY},this.onCanvasPointerUp=e=>{const t=e.clientX,s=e.clientY;!this._pointerEventHelper.downX||Math.abs(t-this._pointerEventHelper.downX)>this._pointerEventHelper.maxDiff||Math.abs(s-this._pointerEventHelper.downY)>this._pointerEventHelper.maxDiff||(this._measureMode?this.setMeasureMarkerAtPoint(t,s):this._pointerEventHelper.waitForDouble?(this.isolateSelectedMeshes(),this._pointerEventHelper.waitForDouble=!1):(this._pointerEventHelper.waitForDouble=!0,setTimeout(()=>{this._pointerEventHelper.waitForDouble=!1},300),this.selectMeshAtPoint(t,s,e.ctrlKey)),this._pointerEventHelper.downX=null,this._pointerEventHelper.downY=null)},this.onCanvasMouseMove=e=>{e.buttons||(clearTimeout(this._pointerEventHelper.mouseMoveTimer),this._pointerEventHelper.mouseMoveTimer=null,this._pointerEventHelper.mouseMoveTimer=window.setTimeout(()=>{const t=e.clientX,s=e.clientY;this.highlightMeshAtPoint(t,s),this._measureMode&&this.setTempMarkerAtPoint(t,s)},30))},this.initObservables(),this._container=document.getElementById(s),!this._container)throw new Error("Container not found!");this._options=new N(n),this._optionsChange.next(this._options),this._colorRgbRmoUtils=new X(this._options.isolationColor,this._options.isolationOpacity,this._options.selectionColor,this._options.highlightColor),this._lights=new J(this._options.usePhysicalLights,this._options.ambientLightIntensity,this._options.hemiLightIntensity,this._options.dirLightIntensity),this._renderScene=new q(this._colorRgbRmoUtils),this._simplifiedScene=new W(this._colorRgbRmoUtils),this._pickingScene=new Z,this.initLoader(i),this.initRenderer(),this._containerResizeSensor=new F(this._container,()=>{this.resizeRenderer()})}destroy(){var e,t,s,i,n,o,r,h,a,l;this._subscriptions.forEach(e=>e.unsubscribe()),this.closeSubjects(),null===(e=this._containerResizeSensor)||void 0===e||e.detach(),this._containerResizeSensor=null,null===(t=this._cameraControls)||void 0===t||t.destroy(),this._cameraControls=null,null===(s=this._renderer)||void 0===s||s.dispose(),null===(n=null===(i=this._loader)||void 0===i?void 0:i.dracoLoader)||void 0===n||n.dispose(),null===(o=this._pickingScene)||void 0===o||o.destroy(),this._pickingScene=null,null===(r=this._simplifiedScene)||void 0===r||r.destroy(),this._simplifiedScene=null,null===(h=this._renderScene)||void 0===h||h.destroy(),this._renderScene=null,null===(a=this._colorRgbRmoUtils)||void 0===a||a.destroy(),this._colorRgbRmoUtils=null,null===(l=this._loadedMeshes)||void 0===l||l.forEach(e=>{e.geometry.dispose(),e.material.dispose()}),this._loadedMeshes=null}updateOptionsAsync(e){return ee(this,void 0,void 0,(function*(){const t=this._options;this._options=new N(e);let s=!1,i=!1,n=!1;return this._options.useAntialiasing!==t.useAntialiasing&&(this.initRenderer(),s=!0),this._options.usePhysicalLights===t.usePhysicalLights&&this._options.ambientLightIntensity===t.ambientLightIntensity&&this._options.hemiLightIntensity===t.hemiLightIntensity&&this._options.dirLightIntensity===t.dirLightIntensity||(this._renderer.physicallyCorrectLights=this._options.usePhysicalLights,this._lights.update(this._options.usePhysicalLights,this._options.ambientLightIntensity,this._options.hemiLightIntensity,this._options.dirLightIntensity),i=!0),this._options.isolationColor===t.isolationColor&&this._options.isolationOpacity===t.isolationOpacity&&this._options.selectionColor===t.selectionColor&&this._options.highlightColor===t.highlightColor||(this._colorRgbRmoUtils.updateColors(this._options.isolationColor,this._options.isolationOpacity,this._options.selectionColor,this._options.highlightColor),n=!0),(s||i||n)&&this._colorRgbRmoUtils.updateMaterials(),this._options.highlightingEnabled!==t.highlightingEnabled&&(this._options.highlightingEnabled?this._renderer.domElement.addEventListener("mousemove",this.onCanvasMouseMove):this._renderer.domElement.removeEventListener("mousemove",this.onCanvasMouseMove)),this._options.meshMergeType===t.meshMergeType&&this._options.fastRenderType===t.fastRenderType||(yield this.updateRenderSceneAsync()),this._optionsChange.next(this._options),this._options}))}openModelsAsync(e){return ee(this,void 0,void 0,(function*(){if(!(null==e?void 0:e.length))return[];const t=[];e.forEach(e=>{const n=new s;this._loadingQueue.push(()=>ee(this,void 0,void 0,(function*(){const{url:t,guid:s,name:i}=e,o=this._loadedModelsByGuid.has(s)?{url:t,guid:s}:yield this.loadModel(t,s,i);n.next(o),n.complete()}))),t.push(n.pipe(i()).toPromise())}),this.processLoadingQueueAsync();return yield Promise.all(t)}))}closeModelsAsync(e){return ee(this,void 0,void 0,(function*(){if(!(null==e?void 0:e.length))return;const t=[];e.forEach(e=>{const n=new s;this._loadingQueue.push(()=>ee(this,void 0,void 0,(function*(){this.removeModelFromLoaded(e),n.next(!0),n.complete()}))),t.push(n.pipe(i()).toPromise())}),this.processLoadingQueueAsync(),yield Promise.all(t)}))}colorItems(e){this._loadingInProgress?this._queuedColoring=e:this.resetSelectionAndColorMeshes(e)}selectItems(e){(null==e?void 0:e.length)&&(this._loadingInProgress?this._queuedSelection={ids:e,isolate:!1}:this.findAndSelectMeshes(e,!1))}isolateItems(e){(null==e?void 0:e.length)&&(this._loadingInProgress?this._queuedSelection={ids:e,isolate:!0}:this.findAndSelectMeshes(e,!0))}getOpenedModels(){return this._openedModelsChange.getValue()}getSelectedItems(){return this._selectionChange.getValue()}toggleMeasureMode(e){this._measureMode!==e&&(this._measureMode?(this.clearMeasurements(),this._measureMode=!1):this._measureMode=!0)}zoomOutScene(){this.renderWholeScene()}initObservables(){this.optionsChange$=this._optionsChange.asObservable(),this.loadingStateChange$=this._loadingStateChange.asObservable(),this.modelLoadingStart$=this._modelLoadingStart.asObservable(),this.modelLoadingProgress$=this._modelLoadingProgress.asObservable(),this.modelLoadingEnd$=this._modelLoadingEnd.asObservable(),this.openedModelsChange$=this._openedModelsChange.asObservable(),this.selectionChange$=this._selectionChange.asObservable(),this.manualSelectionChange$=this._manualSelectionChange.asObservable(),this.lastFrameTime$=this._lastFrameTime.asObservable(),this.snapPointChange$=this._snapPointChange.asObservable(),this.distanceMeasureChange$=this._distanceMeasureChange.asObservable()}closeSubjects(){this._optionsChange.complete(),this._loadingStateChange.complete(),this._modelLoadingStart.complete(),this._modelLoadingProgress.complete(),this._modelLoadingEnd.complete(),this._openedModelsChange.complete(),this._selectionChange.complete(),this._manualSelectionChange.complete(),this._lastFrameTime.complete(),this._snapPointChange.complete(),this._distanceMeasureChange.complete()}addCanvasEventListeners(){const{highlightingEnabled:e}=this._options;this._renderer.domElement.addEventListener("pointerdown",this.onCanvasPointerDown),this._renderer.domElement.addEventListener("pointerup",this.onCanvasPointerUp),e&&this._renderer.domElement.addEventListener("mousemove",this.onCanvasMouseMove)}initRenderer(){this._renderer&&(this._renderer.domElement.remove(),this._renderer.dispose(),this._renderer.forceContextLoss(),this._renderer=null);const{useAntialiasing:e,usePhysicalLights:t}=this._options,s=new R({alpha:!0,antialias:e});s.setClearColor(0,0),s.outputEncoding=k,s.toneMapping=I,s.physicallyCorrectLights=t,this._renderer=s,this.resizeRenderer(),this.addCanvasEventListeners(),this._cameraControls?this._cameraControls.changeCanvas(this._renderer.domElement):this._cameraControls=new K(this._renderer.domElement,()=>this.renderOnCameraMove()),this._container.append(this._renderer.domElement)}resizeRenderer(){var e,t;const{width:s,height:i}=this._container.getBoundingClientRect();null===(e=this._cameraControls)||void 0===e||e.resize(s,i),null===(t=this._renderer)||void 0===t||t.setSize(s,i,!1),this.render()}updateRenderSceneAsync(){return ee(this,void 0,void 0,(function*(){yield this._renderScene.updateSceneAsync(this._lights.getLights(),this._loadedMeshesArray,this._loadedModelsArray,this._options.meshMergeType),this._options.fastRenderType?yield this._simplifiedScene.updateSceneAsync(this._lights.getCopy(),this._loadedMeshesArray,this._options.fastRenderType):this._simplifiedScene.clearScene(),this.renderWholeScene()}))}prepareToRender(e=null){(null==e?void 0:e.length)&&this._cameraControls.focusCameraOnObjects(e),this._meshesNeedColorUpdate.size&&(this._renderScene.updateMeshColors(this._meshesNeedColorUpdate),this._meshesNeedColorUpdate.clear())}render(e=null,t=!1){this.prepareToRender(e),requestAnimationFrame(()=>{var e,s;if(!this._renderer)return;const i=performance.now();t&&(null===(e=this._simplifiedScene)||void 0===e?void 0:e.scene)?this._renderer.render(this._simplifiedScene.scene,this._cameraControls.camera):(null===(s=this._renderScene)||void 0===s?void 0:s.scene)&&this._renderer.render(this._renderScene.scene,this._cameraControls.camera);const n=performance.now()-i;this._lastFrameTime.next(n)})}renderWholeScene(){this.render(this._loadedMeshesArray.length?[this._renderScene.scene]:null)}renderOnCameraMove(){this._options.fastRenderType?(this._deferRender&&(clearTimeout(this._deferRender),this._deferRender=null),this.render(null,!0),this._deferRender=window.setTimeout(()=>{this._deferRender=null,this.render()},300)):this.render()}initLoader(e){const t=new U;if(e){const s=new D;s.setDecoderPath(e),s.preload(),t.setDRACOLoader(s)}this._loader=t}processLoadingQueueAsync(){return ee(this,void 0,void 0,(function*(){if(this._loader&&!this._loadingInProgress&&this._loadingQueue.length){for(this._loadingInProgress=!0,this._loadingStateChange.next(!0);this._loadingQueue.length>0;){const e=this._loadingQueue.shift();yield e()}this.updateModelsDataArrays(),this.runQueuedColoring(),this.runQueuedSelection(),yield this.updateRenderSceneAsync(),this.emitOpenedModelsChanged(),this._loadingStateChange.next(!1),this._loadingInProgress=!1,yield this.processLoadingQueueAsync()}}))}loadModel(e,t,s){return ee(this,void 0,void 0,(function*(){let i;this.onModelLoadingStart(e,t);try{const i=yield this._loader.loadAsync(e,s=>this.onModelLoadingProgress(s,e,t));this.addModelToLoaded(i,t,s)}catch(e){i=e}const n={url:e,guid:t,error:i};return this.onModelLoadingEnd(n),n}))}onModelLoadingStart(e,t){this._modelLoadingStart.next({url:e,guid:t})}onModelLoadingProgress(e,t,s){const i=Math.round(e.loaded/e.total*100);this._modelLoadingProgress.next({url:t,guid:s,progress:i})}onModelLoadingEnd(e){const{url:t,guid:s}=e;this._modelLoadingProgress.next({url:t,guid:s,progress:0}),this._modelLoadingEnd.next(e)}addModelToLoaded(e,t,s){const i=s||t,n=e.scene;n.userData.guid=t,n.name=i;const o=[],r=new Set;n.traverse(e=>{if(e instanceof u&&e.geometry instanceof p&&e.material instanceof T){const s=`${t}|${e.name}`;e.userData.id=s,e.userData.modelGuid=t,this._pickingScene.add(e),this._loadedMeshes.add(e),this._loadedMeshesById.has(s)?this._loadedMeshesById.get(s).push(e):this._loadedMeshesById.set(s,[e]),o.push(e),r.add(e.name)}});const h={name:i,meshes:o,handles:r};this._loadedModels.add(h),this._loadedModelsByGuid.set(t,h)}removeModelFromLoaded(e){if(!this._loadedModelsByGuid.has(e))return;const t=this._loadedModelsByGuid.get(e);t.meshes.forEach(e=>{var t;this._loadedMeshes.delete(e),this._loadedMeshesById.delete(e.userData.id),this._pickingScene.remove(e),null===(t=e.geometry)||void 0===t||t.dispose()}),this._highlightedMesh=null,this._selectedMeshes=this._selectedMeshes.filter(t=>t.userData.modelGuid!==e),this._isolatedMeshes=this._isolatedMeshes.filter(t=>t.userData.modelGuid!==e),this._coloredMeshes=this._coloredMeshes.filter(t=>t.userData.modelGuid!==e),this._loadedModels.delete(t),this._loadedModelsByGuid.delete(e)}updateModelsDataArrays(){this._loadedMeshesArray=[...this._loadedMeshes],this._loadedModelsArray=[...this._loadedModels]}emitOpenedModelsChanged(){const e=[];for(const[t,s]of this._loadedModelsByGuid)e.push({guid:t,name:s.name,handles:s.handles});this._openedModelsChange.next(e)}runQueuedColoring(){this._queuedColoring&&this.resetSelectionAndColorMeshes(this._queuedColoring)}resetSelectionAndColorMeshes(e){this.resetSelection(),this.colorMeshes(e)}colorMeshes(e){if(this.removeColoring(),null==e?void 0:e.length)for(const t of e){const e=new n(t.color),s=new j(e.r,e.g,e.b,1,0,t.opacity);t.ids.forEach(e=>{const t=this._loadedMeshesById.get(e);(null==t?void 0:t.length)&&t.forEach(e=>{e.userData.colored=!0,j.setCustomToMesh(e,s),this._meshesNeedColorUpdate.add(e),this._coloredMeshes.push(e)})})}this.render()}removeColoring(){for(const e of this._coloredMeshes)e.userData.colored=void 0,j.deleteFromMesh(e,!0),this._meshesNeedColorUpdate.add(e);this._coloredMeshes.length=0}getMeshAt(e,t){return this._renderer&&this._pickingScene?this._pickingScene.getSourceMeshAt(this._cameraControls.camera,this._renderer,e,t):null}getSnapPointAt(e,t){return this._renderer&&this._pickingScene?this._pickingScene.getSnapPointAt(this._cameraControls.camera,this._renderer,e,t):null}runQueuedSelection(){if(this._queuedSelection){const{ids:e,isolate:t}=this._queuedSelection;this.findAndSelectMeshes(e,t)}}findAndSelectMeshes(e,t){const{found:s}=this.findMeshesByIds(new Set(e));s.length&&this.selectMeshes(s,!1,t)}findMeshesByIds(e){const t=[],s=new Set;return e.forEach(e=>{this._loadedMeshesById.has(e)?t.push(...this._loadedMeshesById.get(e)):s.add(e)}),{found:t,notFound:s}}removeSelection(){for(const e of this._selectedMeshes)e.userData.selected=void 0,this._meshesNeedColorUpdate.add(e);this._selectedMeshes.length=0}removeIsolation(){for(const e of this._isolatedMeshes)e.userData.isolated=void 0,this._meshesNeedColorUpdate.add(e);this._isolatedMeshes.length=0}resetSelection(){this.removeSelection(),this.removeIsolation()}selectMeshAtPoint(e,t,s){const i=this.getMeshAt(e,t);i?s?i.userData.selected?this.removeFromSelection(i):this.addToSelection(i):this.selectMeshes([i],!0,!1):this.selectMeshes([],!0,!1)}addToSelection(e){const t=[e,...this._selectedMeshes];return this.selectMeshes(t,!0,!1),!0}removeFromSelection(e){const t=this._selectedMeshes.filter(t=>t!==e);return this.selectMeshes(t,!0,!1),!0}selectMeshes(e,t,s){if(this.resetSelection(),!(null==e?void 0:e.length))return this.emitSelectionChanged(t,!0),null;e.forEach(e=>{e.userData.selected=!0,this._meshesNeedColorUpdate.add(e)}),this._selectedMeshes=e,s?(this.emitSelectionChanged(t,!1),this.isolateSelectedMeshes()):this.emitSelectionChanged(t,!0)}isolateSelectedMeshes(){this._selectedMeshes.length&&(this._loadedMeshesArray.forEach(e=>{e.userData.selected||(e.userData.isolated=!0,this._meshesNeedColorUpdate.add(e),this._isolatedMeshes.push(e))}),this.render(this._selectedMeshes))}emitSelectionChanged(e,t){t&&this.render(e?null:this._selectedMeshes);const s=new Set;this._selectedMeshes.forEach(e=>s.add(e.userData.id)),this._selectionChange.next(s),e&&this._manualSelectionChange.next(s)}highlightMeshAtPoint(e,t){const s=this.getMeshAt(e,t);this.highlightItem(s)}highlightItem(e){e!==this._highlightedMesh&&(this.removeHighlighting(),e&&(e.userData.highlighted=!0,this._meshesNeedColorUpdate.add(e),this._highlightedMesh=e),this.render())}removeHighlighting(){if(this._highlightedMesh){const e=this._highlightedMesh;e.userData.highlighted=void 0,this._meshesNeedColorUpdate.add(e),this._highlightedMesh=null}}setTempMarkerAtPoint(e,t){const s=this.getSnapPointAt(e,t);s?(this._renderScene.setMarker("temp",s),this._snapPointChange.next(new H(s.x,s.y,s.z,0,!0))):(this._renderScene.resetMarker("temp"),this._snapPointChange.next(null)),this.render()}setMeasureMarkerAtPoint(e,t){const s=this._pickingScene.getSnapPointAt(this._cameraControls.camera,this._renderer,e,t);s?this._measurePoints.end?(this._measurePoints.start=this._measurePoints.end,this._measurePoints.end=s):this._measurePoints.start?this._measurePoints.end=s:this._measurePoints.start=s:(this._measurePoints.start&&(this._measurePoints.start=null),this._measurePoints.end&&(this._measurePoints.end=null)),this._measurePoints.start?this._renderScene.setMarker("start",this._measurePoints.start):this._renderScene.resetMarker("start"),this._measurePoints.end?(this._renderScene.setMarker("end",this._measurePoints.end),this._renderScene.setSegment("distance",this._measurePoints.start,this._measurePoints.end)):(this._renderScene.resetMarker("end"),this._renderScene.resetSegment("distance")),this.render(),this.emitDistanceMeasureChange()}emitDistanceMeasureChange(){this._measurePoints.start&&this._measurePoints.end?this._distanceMeasureChange.next(new $(this._measurePoints.start,this._measurePoints.end,!0)):this._distanceMeasureChange.next(null)}clearMeasurements(){this._measurePoints.start=null,this._measurePoints.end=null,this._distanceMeasureChange.next(null),this._renderScene.resetMarkers(),this._renderScene.resetSegments(),this.render()}}export{$ as DistanceMeasure,te as GltfViewer,N as GltfViewerOptions,H as Vec4};
