import{BehaviorSubject as e,Subject as t,AsyncSubject as s}from"rxjs";import{PerspectiveCamera as i,Box3 as o,Vector3 as n,AmbientLight as r,HemisphereLight as h,DirectionalLight as d,WebGLRenderer as a,sRGBEncoding as l,NoToneMapping as c,Scene as g,Mesh as u,Uint32BufferAttribute as _,Float32BufferAttribute as m,BufferGeometry as p,WebGLRenderTarget as M,Color as y,MeshStandardMaterial as f,NoBlending as v,DoubleSide as C,MeshPhysicalMaterial as S,NormalBlending as w}from"three";import{GLTFLoader as P}from"three/examples/jsm/loaders/GLTFLoader";import{DRACOLoader as b}from"three/examples/jsm/loaders/DRACOLoader";import{OrbitControls as E}from"three/examples/jsm/controls/OrbitControls";import{ResizeSensor as L}from"css-element-queries";import{first as I}from"rxjs/operators";var x=function(e,t,s,i){return new(s||(s=Promise))((function(o,n){function r(e){try{d(i.next(e))}catch(e){n(e)}}function h(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){var t;e.done?o(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,h)}d((i=i.apply(e,t||[])).next())}))};class A{constructor(e,t,s,i,o,n){this.r=e,this.g=t,this.b=s,this.roughness=i,this.metalness=o,this.opacity=n}static createFromMaterial(e){return new A(e.color.r,e.color.g,e.color.b,e.roughness,e.metalness,e.opacity)}static deleteFromMesh(e,t=!1,s=!1){e[A.prop]=null,t&&(e[A.customProp]=null),s&&(e[A.defaultProp]=null)}static getDefaultFromMesh(e){return e[A.defaultProp]||(e[A.defaultProp]=A.createFromMaterial(e.material)),e[A.defaultProp]}static getCustomFromMesh(e){return e[A.customProp]}static getFromMesh(e){return e[A.prop]?e[A.prop]:e[A.customProp]?e[A.customProp]:A.getDefaultFromMesh(e)}static setCustomToMesh(e,t){e[A.customProp]=t}static setToMesh(e,t){e[A.prop]=t}}A.prop="rgbrmo",A.customProp="rgbrmoC",A.defaultProp="rgbrmoD";class B{constructor(e=null){this.dracoDecoderEnabled=!0,this.dracoDecoderPath="/assets/draco/",this.highlightingEnabled=!0,this.highlightingLatency=40,this.highlightColor=16776960,this.selectionColor=16711680,this.isolationColor=5592405,this.isolationOpacity=.2,this.physicalLights=!1,this.ambientLight=!0,this.ambientLightIntensity=1,this.hemiLight=!0,this.hemiLightIntensity=.4,this.dirLight=!0,this.dirLightIntensity=.6,this.useAntialiasing=!0,this.meshRenderType="per_model",null!=e&&Object.assign(this,e)}}class G{constructor(s,i){if(this._initialized=new e(!1),this._loadingStateChange=new e(!1),this._modelLoadingStart=new t,this._modelLoadingEnd=new t,this._modelLoadingProgress=new t,this._openedModelsChange=new e([]),this._selectionChange=new e(new Set),this._manualSelectionChange=new t,this._hlProp="highlighted",this._selProp="selected",this._isolProp="isolated",this._colProp="colored",this._subscriptions=[],this._lights=[],this._renderGeometries=[],this._renderGeometryIndexBySourceMesh=new Map,this._renderSourceMeshesByGeometryIndex=new Map,this._renderGeometryIndicesNeedSort=new Set,this._sourceMeshesNeedColorUpdate=new Set,this._queuedColoring=null,this._queuedSelection=null,this._highlightedMesh=null,this._selectedMeshes=[],this._isolatedMeshes=[],this._coloredMeshes=[],this._pickingMeshById=new Map,this._meshByPickingColor=new Map,this._lastPickingColor=0,this._pointerEventHelper={downX:null,downY:null,maxDiff:10,mouseMoveTimer:null,waitForDouble:!1},this._loadingInProgress=!1,this._loadingQueue=[],this._loadedModels=new Set,this._loadedModelsByGuid=new Map,this._loadedModelsArray=[],this._loadedMeshes=new Set,this._loadedMeshesById=new Map,this._loadedMeshesArray=[],this._onCanvasPointerDown=e=>{this._pointerEventHelper.downX=e.clientX,this._pointerEventHelper.downY=e.clientY},this._onCanvasPointerUp=e=>{const t=e.clientX,s=e.clientY;!this._pointerEventHelper.downX||Math.abs(t-this._pointerEventHelper.downX)>this._pointerEventHelper.maxDiff||Math.abs(s-this._pointerEventHelper.downY)>this._pointerEventHelper.maxDiff||(this._pointerEventHelper.waitForDouble?(this._selectedMeshes.length&&(this.isolateSelectedMeshes(),this.fitCameraToObjects(this._selectedMeshes)),this._pointerEventHelper.waitForDouble=!1):(this._pointerEventHelper.waitForDouble=!0,setTimeout(()=>{this._pointerEventHelper.waitForDouble=!1},300),this.selectMeshAtPoint(t,s,e.ctrlKey)),this._pointerEventHelper.downX=null,this._pointerEventHelper.downY=null)},this._onCanvasMouseMove=e=>{e.buttons||(clearTimeout(this._pointerEventHelper.mouseMoveTimer),this._pointerEventHelper.mouseMoveTimer=null,this._pointerEventHelper.mouseMoveTimer=window.setTimeout(()=>{const t=e.clientX,s=e.clientY;this.highlightMeshAtPoint(t,s)},this._options.highlightingLatency))},this._container=document.getElementById(s),!this._container)throw new Error("Container not found!");this._options=new B(i),this.init()}init(){this.initObservables(),this.initPickingScene(),this.initMaterials(),this.initLigths(),this.initLoader(),this.initRenderer(),this.initCameraWithControls(),this._containerResizeSensor=new L(this._container,()=>{const{width:e,height:t}=this._container.getBoundingClientRect();this.resizeCamera(e,t),this.resizeRenderer(e,t)}),this.addCanvasEventListeners(),this.render(),this._initialized.next(!0)}destroy(){var e,t,s,i,o,n,r;this._subscriptions.forEach(e=>e.unsubscribe()),this.closeSubjects(),null===(e=this._containerResizeSensor)||void 0===e||e.detach(),null===(t=this._renderer)||void 0===t||t.dispose(),null===(s=this._orbitControls)||void 0===s||s.dispose(),null===(o=null===(i=this._loader)||void 0===i?void 0:i.dracoLoader)||void 0===o||o.dispose(),this._renderGeometries.forEach(e=>e.geometry.dispose()),this._renderGeometries=null,this._renderScene=null,null===(n=this._renderMaterial)||void 0===n||n.dispose(),this._loadedMeshes.forEach(e=>{e.geometry.dispose(),e.material.dispose()}),[...this._meshByPickingColor.values()].forEach(e=>{e.geometry.dispose(),e.material.dispose()}),null===(r=this._pickingTarget)||void 0===r||r.dispose()}openModelsAsync(e){return x(this,void 0,void 0,(function*(){if(!(null==e?void 0:e.length))return[];const t=[];e.forEach(e=>{const i=new s;this._loadingQueue.push(()=>x(this,void 0,void 0,(function*(){const{url:t,guid:s,name:o}=e,n=this._loadedModelsByGuid.has(s)?{url:t,guid:s}:yield this.loadModel(t,s,o);i.next(n),i.complete()}))),t.push(i.pipe(I()).toPromise())}),this.processLoadingQueueAsync();return yield Promise.all(t)}))}closeModelsAsync(e){return x(this,void 0,void 0,(function*(){if(!(null==e?void 0:e.length))return;const t=[];e.forEach(e=>{const i=new s;this._loadingQueue.push(()=>x(this,void 0,void 0,(function*(){this.removeModelFromLoaded(e),i.next(!0),i.complete()}))),t.push(i.pipe(I()).toPromise())}),this.processLoadingQueueAsync(),yield Promise.all(t)}))}colorItems(e){this._loadingInProgress?this._queuedColoring=e:this.resetSelectionAndColorMeshes(e)}selectItems(e){(null==e?void 0:e.length)&&(this._loadingInProgress?this._queuedSelection={ids:e,isolate:!1}:this.findAndSelectMeshes(e,!1,!0))}isolateItems(e){(null==e?void 0:e.length)&&(this._loadingInProgress?this._queuedSelection={ids:e,isolate:!0}:this.findAndSelectMeshes(e,!0,!0))}getOpenedModels(){return this._openedModelsChange.getValue()}getSelectedItems(){return this._selectionChange.getValue()}initObservables(){this.initialized$=this._initialized.asObservable(),this.loadingStateChange$=this._loadingStateChange.asObservable(),this.modelLoadingStart$=this._modelLoadingStart.asObservable(),this.modelLoadingProgress$=this._modelLoadingProgress.asObservable(),this.modelLoadingEnd$=this._modelLoadingEnd.asObservable(),this.openedModelsChange$=this._openedModelsChange.asObservable(),this.selectionChange$=this._selectionChange.asObservable(),this.manualSelectionChange$=this._manualSelectionChange.asObservable()}closeSubjects(){this._initialized.complete(),this._loadingStateChange.complete(),this._modelLoadingStart.complete(),this._modelLoadingProgress.complete(),this._modelLoadingEnd.complete(),this._openedModelsChange.complete(),this._selectionChange.complete(),this._manualSelectionChange.complete()}addCanvasEventListeners(){this._renderer.domElement.addEventListener("pointerdown",this._onCanvasPointerDown),this._renderer.domElement.addEventListener("pointerup",this._onCanvasPointerUp),this._options.highlightingEnabled&&this._renderer.domElement.addEventListener("mousemove",this._onCanvasMouseMove)}initCameraWithControls(){const e=new i(75,this._containerWidth/this._containerHeight,1,1e4),t=new E(e,this._renderer.domElement);t.addEventListener("change",()=>this.render()),e.position.set(0,1e3,1e3),e.lookAt(0,0,0),t.update(),this._camera=e,this._orbitControls=t}resizeCamera(e,t){this._camera&&(this._camera.aspect=e/t,this._camera.updateProjectionMatrix())}fitCameraToObjects(e,t=1.2){if(!(null==e?void 0:e.length))return;const s=new o;for(const t of e)s.expandByObject(t);const i=s.getSize(new n),r=s.getCenter(new n),h=Math.max(i.x,i.y,i.z)/(2*Math.atan(Math.PI*this._camera.fov/360)),d=h/this._camera.aspect,a=t*Math.max(h,d),l=this._orbitControls.target.clone().sub(this._camera.position).normalize().multiplyScalar(a);this._orbitControls.maxDistance=Math.max(10*a,1e4),this._orbitControls.target.copy(r),this._camera.near=Math.min(a/100,1),this._camera.far=Math.max(100*a,1e4),this._camera.updateProjectionMatrix(),this._camera.position.copy(this._orbitControls.target).sub(l),this._orbitControls.update()}initLigths(){if(this._options.ambientLight){const e=new r(2236962,this._options.physicalLights?this._options.ambientLightIntensity*Math.PI:this._options.ambientLightIntensity);this._lights.push(e)}if(this._options.hemiLight){const e=new h(16777147,526368,this._options.physicalLights?this._options.hemiLightIntensity*Math.PI:this._options.hemiLightIntensity);e.position.set(0,2e3,0),this._lights.push(e)}if(this._options.dirLight){const e=new d(16777215,this._options.physicalLights?this._options.dirLightIntensity*Math.PI:this._options.dirLightIntensity);e.position.set(-2,10,2),this._lights.push(e)}}initRenderer(){const e=new a({alpha:!0,antialias:this._options.useAntialiasing});e.setSize(this._containerWidth,this._containerHeight,!1),e.setClearColor(0,0),e.outputEncoding=l,e.physicallyCorrectLights=this._options.physicalLights,e.toneMapping=c,this._container.append(e.domElement),this._renderer=e}resizeRenderer(e,t){this._renderer&&(this._renderer.setSize(e,t,!1),this.render())}updateRenderSceneAsync(){return x(this,void 0,void 0,(function*(){yield this.rebuildRenderSceneAsync(this._options.meshRenderType),this._loadedMeshesArray.length&&this.fitCameraToObjects([this._renderScene]),this.render()}))}rebuildRenderSceneAsync(e){return x(this,void 0,void 0,(function*(){this._renderScene=null;const t=new g;let s;switch(t.add(...this._lights),this._renderGeometries.forEach(e=>e.geometry.dispose()),this._renderGeometries.length=0,this._renderGeometryIndexBySourceMesh.clear(),this._renderSourceMeshesByGeometryIndex.clear(),this._renderGeometryIndicesNeedSort.clear(),e){case"single":s=[this._loadedMeshesArray];break;case"one_per_model":s=this._loadedModelsArray.map(e=>e.meshes).filter(e=>e.length);break;case"per_model":s=[];const e=1e3;this._loadedModelsArray.map(e=>e.meshes).filter(e=>e.length).forEach(t=>{if(t.length<=e)s.push(t);else for(let i=0;i<t.length;i+=e){const o=t.slice(i,i+e);s.push(o)}});break;case"per_mesh":s=this._loadedMeshesArray.map(e=>[e]);break;default:s=[]}for(const e of s)if(e.length){const t=yield this.buildRenderGeometryAsync(e);this._renderGeometries.push(t);const s=this._renderGeometries.length-1;this._renderSourceMeshesByGeometryIndex.set(s,e),this._renderGeometryIndicesNeedSort.add(s),e.forEach(e=>{this._renderGeometryIndexBySourceMesh.set(e,s)})}this._renderGeometries.forEach(e=>{const s=new u(e.geometry,this._renderMaterial);t.add(s)}),this._renderScene=t}))}buildRenderGeometryAsync(e){return x(this,void 0,void 0,(function*(){let t=0,s=0;if(e.forEach(e=>{t+=3*e.geometry.getAttribute("position").count,s+=e.geometry.getIndex().count}),0===t)return;const i=new _(new Uint32Array(s),1),o=new m(new Float32Array(t),3),n=new m(new Float32Array(t),3),r=new m(new Float32Array(t),3),h=new Map;let d=0,a=0;for(let t=0;t<e.length;t+=100)yield new Promise(s=>{setTimeout(()=>{e.slice(t,t+100).forEach(e=>{const t=e.geometry.clone().applyMatrix4(e.matrix),s=t.getAttribute("position").array,l=t.getIndex().array,c=new Uint32Array(l.length);h.set(e,c);for(let e=0;e<l.length;e++){const t=l[e]+d;i.setX(a++,t),c[e]=t}for(let t=0;t<s.length;){const i=A.getFromMesh(e);o.setXYZ(d,i.r,i.g,i.b),n.setXYZ(d,i.roughness,i.metalness,i.opacity),r.setXYZ(d++,s[t++],s[t++],s[t++])}t.dispose()}),s()},0)});const l=new p;return l.setIndex(i),l.setAttribute("color",o),l.setAttribute("rmo",n),l.setAttribute("position",r),{geometry:l,positions:r,colors:o,rmos:n,indices:i,indicesBySourceMesh:h}}))}sortRenderGeometriesIndicesByOpacity(){this._renderGeometryIndicesNeedSort.forEach(e=>{const t=this._renderSourceMeshesByGeometryIndex.get(e),s=[],i=[];t.forEach(e=>{1===A.getFromMesh(e).opacity?s.push(e):i.push(e)});const{indices:o,indicesBySourceMesh:n}=this._renderGeometries[e];let r=0;s.forEach(e=>{n.get(e).forEach(e=>{o.setX(r++,e)})}),i.forEach(e=>{n.get(e).forEach(e=>{o.setX(r++,e)})}),o.needsUpdate=!0})}updateRenderGeometriesColors(){const e=new Map;this._sourceMeshesNeedColorUpdate.forEach(t=>{const s=this._renderGeometryIndexBySourceMesh.get(t);e.has(s)?e.get(s).push(t):e.set(s,[t])}),e.forEach((e,t)=>{this.updateRenderGeometryColors(t,e)})}updateRenderGeometryColors(e,t){const{colors:s,rmos:i,indicesBySourceMesh:o}=this._renderGeometries[e];let n=!1;t.forEach(e=>{const{rgbRmo:t,opacityChanged:r}=this.refreshMeshColors(e);o.get(e).forEach(e=>{s.setXYZ(e,t.r,t.g,t.b),i.setXYZ(e,t.roughness,t.metalness,t.opacity)}),!n&&r&&(n=!0)}),s.needsUpdate=!0,i.needsUpdate=!0,n&&this._renderGeometryIndicesNeedSort.add(e)}refreshMeshColors(e){e[this._isolProp]||A.deleteFromMesh(e);const t=A.getFromMesh(e);let s;return s=e[this._hlProp]?new A(this._highlightColor.r,this._highlightColor.g,this._highlightColor.b,t.roughness,t.metalness,t.opacity):e[this._selProp]?new A(this._selectionColor.r,this._selectionColor.g,this._selectionColor.b,t.roughness,t.metalness,t.opacity):e[this._isolProp]?this._isolationColor:t,A.setToMesh(e,s),{rgbRmo:s,opacityChanged:s.opacity!==t.opacity}}render(){this._sourceMeshesNeedColorUpdate.size&&(this.updateRenderGeometriesColors(),this._sourceMeshesNeedColorUpdate.clear()),this._renderGeometryIndicesNeedSort.size&&(this.sortRenderGeometriesIndicesByOpacity(),this._renderGeometryIndicesNeedSort.clear()),requestAnimationFrame(()=>{var e;this._renderScene&&this._camera&&(null===(e=this._renderer)||void 0===e||e.render(this._renderScene,this._camera))})}initPickingScene(){const e=new M(1,1),t=new g;t.background=new y(0),this._pickingTarget=e,this._pickingScene=t}nextPickingColor(){return++this._lastPickingColor}addMeshToPickingScene(e){const t=new f({color:new y(this.nextPickingColor()),emissive:new y(this._lastPickingColor),blending:v,flatShading:!0,side:C,roughness:1,metalness:0}),s=this._lastPickingColor.toString(16),i=new u(e.geometry,t);i.userData.originalUuid=e.uuid,i.userData.color=s,i.position.copy(e.position),i.rotation.copy(e.rotation),i.scale.copy(e.scale),this._pickingScene.add(i),this._pickingMeshById.set(e.uuid,i),this._meshByPickingColor.set(s,e)}removeMeshFromPickingScene(e){const t=this._pickingMeshById.get(e.uuid);t&&(this._pickingScene.remove(t),this._pickingMeshById.delete(e.uuid),this._meshByPickingColor.delete(t.userData.color))}getPickingPosition(e,t){const s=this._renderer.domElement.getBoundingClientRect();return{x:(e-s.left)*this._renderer.domElement.width/s.width,y:(t-s.top)*this._renderer.domElement.height/s.height}}getItemAtPickingPosition(e){const t=this._renderer.getPixelRatio();this._camera.setViewOffset(this._renderer.getContext().drawingBufferWidth,this._renderer.getContext().drawingBufferHeight,e.x*t||0,e.y*t||0,1,1);const s=new d(16777215,1);s.position.set(-1,2,4),this._camera.add(s),this._renderer.setRenderTarget(this._pickingTarget),this._renderer.render(this._pickingScene,this._camera),this._renderer.setRenderTarget(null),this._camera.clearViewOffset(),this._camera.remove(s);const i=new Uint8Array(4);this._renderer.readRenderTargetPixels(this._pickingTarget,0,0,1,1,i);const o=i[0]<<16|i[1]<<8|i[2];return this._meshByPickingColor.get(o.toString(16))}initLoader(){const e=new P;if(this._options.dracoDecoderEnabled){const t=new b;t.setDecoderPath(this._options.dracoDecoderPath),t.preload(),e.setDRACOLoader(t)}this._loader=e,this.processLoadingQueueAsync()}processLoadingQueueAsync(){return x(this,void 0,void 0,(function*(){if(this._loader&&!this._loadingInProgress){for(this._loadingInProgress=!0,this._loadingStateChange.next(!0);this._loadingQueue.length>0;){const e=this._loadingQueue.shift();yield e()}this.runQueuedColoring(!1),this.runQueuedSelection(!1),yield this.updateRenderSceneAsync(),this._loadingStateChange.next(!1),this._loadingInProgress=!1}}))}loadModel(e,t,s){return x(this,void 0,void 0,(function*(){let i;this.onModelLoadingStart(e,t);try{const i=yield this._loader.loadAsync(e,s=>this.onModelLoadingProgress(s,e,t));this.addModelToLoaded(i,t,s)}catch(e){i=e}const o={url:e,guid:t,error:i};return this.onModelLoadingEnd(o),o}))}onModelLoadingStart(e,t){this._modelLoadingStart.next({url:e,guid:t})}onModelLoadingProgress(e,t,s){const i=Math.round(e.loaded/e.total*100);this._modelLoadingProgress.next({url:t,guid:s,progress:i})}onModelLoadingEnd(e){const{url:t,guid:s}=e;this._modelLoadingProgress.next({url:t,guid:s,progress:0}),this._modelLoadingEnd.next(e)}addModelToLoaded(e,t,s){const i=s||t,o=e.scene;o.userData.guid=t,o.name=i;const n=[],r=new Set;o.traverse(e=>{if(e instanceof u&&e.geometry instanceof p&&e.material instanceof f){const s=`${t}|${e.name}`;e.userData.id=s,e.userData.modelGuid=t,this.addMeshToPickingScene(e),this._loadedMeshes.add(e),this._loadedMeshesById.has(s)?this._loadedMeshesById.get(s).push(e):this._loadedMeshesById.set(s,[e]),n.push(e),r.add(e.name)}});const h={name:i,meshes:n,handles:r};this._loadedModels.add(h),this._loadedModelsByGuid.set(t,h),this.updateModelsDataArrays(),this.emitOpenedModelsChanged()}removeModelFromLoaded(e){if(!this._loadedModelsByGuid.has(e))return;const t=this._loadedModelsByGuid.get(e);t.meshes.forEach(e=>{var t;this._loadedMeshes.delete(e),this._loadedMeshesById.delete(e.userData.id),this.removeMeshFromPickingScene(e),null===(t=e.geometry)||void 0===t||t.dispose()}),this._highlightedMesh=null,this._selectedMeshes=this._selectedMeshes.filter(t=>t.userData.modelGuid!==e),this._isolatedMeshes=this._isolatedMeshes.filter(t=>t.userData.modelGuid!==e),this._coloredMeshes=this._coloredMeshes.filter(t=>t.userData.modelGuid!==e),this._loadedModels.delete(t),this._loadedModelsByGuid.delete(e),this.updateModelsDataArrays(),this.emitOpenedModelsChanged()}updateModelsDataArrays(){this._loadedMeshesArray=[...this._loadedMeshes],this._loadedModelsArray=[...this._loadedModels]}emitOpenedModelsChanged(){const e=[];for(const[t,s]of this._loadedModelsByGuid)e.push({guid:t,name:s.name,handles:s.handles});this._openedModelsChange.next(e)}runQueuedColoring(e=!0){this._queuedColoring&&this.resetSelectionAndColorMeshes(this._queuedColoring,e)}resetSelectionAndColorMeshes(e,t=!0){this.removeIsolation(),this.removeSelection(),this.colorMeshes(e,t)}colorMeshes(e,t){if(this.removeColoring(),null==e?void 0:e.length)for(const t of e){const e=new y(t.color),s=new A(e.r,e.g,e.b,1,0,t.opacity);t.ids.forEach(e=>{const t=this._loadedMeshesById.get(e);(null==t?void 0:t.length)&&t.forEach(e=>{e[this._colProp]=!0,A.setCustomToMesh(e,s),this._sourceMeshesNeedColorUpdate.add(e),this._coloredMeshes.push(e)})})}t&&this.render()}removeColoring(){for(const e of this._coloredMeshes)e[this._colProp]=void 0,A.deleteFromMesh(e,!0),this._sourceMeshesNeedColorUpdate.add(e);this._coloredMeshes.length=0}runQueuedSelection(e){if(this._queuedSelection){const{ids:t,isolate:s}=this._queuedSelection;this.findAndSelectMeshes(t,s,e)}}findAndSelectMeshes(e,t,s){const{found:i}=this.findMeshesByIds(new Set(e));i.length&&this.selectMeshes(i,!1,t,s)}findMeshesByIds(e){const t=[],s=new Set;return e.forEach(e=>{this._loadedMeshesById.has(e)?t.push(...this._loadedMeshesById.get(e)):s.add(e)}),{found:t,notFound:s}}removeSelection(){for(const e of this._selectedMeshes)e[this._selProp]=void 0,this._sourceMeshesNeedColorUpdate.add(e);this._selectedMeshes.length=0}removeIsolation(){for(const e of this._isolatedMeshes)e[this._isolProp]=void 0,this._sourceMeshesNeedColorUpdate.add(e);this._isolatedMeshes.length=0}selectMeshAtPoint(e,t,s){const i=this.getPickingPosition(e,t),o=this.getItemAtPickingPosition(i);o?s?o[this._selProp]?this.removeFromSelection(o):this.addToSelection(o):this.selectMeshes([o],!0,!1,!0):this.selectMeshes([],!0,!1,!0)}addToSelection(e){const t=[e,...this._selectedMeshes];return this.selectMeshes(t,!0,!1,!0),!0}removeFromSelection(e){const t=this._selectedMeshes.filter(t=>t!==e);return this.selectMeshes(t,!0,!1,!0),!0}selectMeshes(e,t,s,i){if(this.removeSelection(),this.removeIsolation(),!(null==e?void 0:e.length))return this.emitSelectionChanged(t,i),null;e.forEach(e=>{e[this._selProp]=!0,this._sourceMeshesNeedColorUpdate.add(e)}),s&&this.isolateSelectedMeshes(),this._selectedMeshes=e,this.emitSelectionChanged(t,i)}isolateSelectedMeshes(){this._loadedMeshesArray.forEach(e=>{e[this._selProp]||(e[this._isolProp]=!0,this._sourceMeshesNeedColorUpdate.add(e),this._isolatedMeshes.push(e))})}emitSelectionChanged(e,t){e||this.fitCameraToObjects(this._selectedMeshes),t&&this.render();const s=new Set;this._selectedMeshes.forEach(e=>s.add(e.userData.id)),this._selectionChange.next(s),e&&this._manualSelectionChange.next(s)}highlightMeshAtPoint(e,t){const s=this.getPickingPosition(e,t),i=this.getItemAtPickingPosition(s);this.highlightItem(i)}highlightItem(e){e!==this._highlightedMesh&&(this.removeHighlighting(),e&&(e[this._hlProp]=!0,this._sourceMeshesNeedColorUpdate.add(e),this._highlightedMesh=e),this.render())}removeHighlighting(){if(this._highlightedMesh){const e=this._highlightedMesh;e[this._hlProp]=void 0,this._sourceMeshesNeedColorUpdate.add(e),this._highlightedMesh=null}}initMaterials(){const e=new y(this._options.isolationColor),t=new A(e.r,e.g,e.b,1,0,this._options.isolationOpacity),s=new y(this._options.selectionColor),i=new y(this._options.highlightColor);this._renderMaterial=this.buildRenderMaterial(!0),this._isolationColor=t,this._selectionColor=s,this._highlightColor=i}buildRenderMaterial(e){const t=new S({vertexColors:!0,flatShading:!0,blending:w,side:C,transparent:e});return t.onBeforeCompile=e=>{e.vertexShader="\n        attribute vec3 rmo;        \n        varying float roughness;\n        varying float metalness;\n        varying float opacity;\n        "+e.vertexShader,e.vertexShader=e.vertexShader.replace("void main() {","\n        void main() {\n          roughness = rmo.x;\n          metalness = rmo.y;\n          opacity = rmo.z;\n        "),e.fragmentShader=e.fragmentShader.replace("uniform float roughness;","varying float roughness;"),e.fragmentShader=e.fragmentShader.replace("uniform float metalness;","varying float metalness;"),e.fragmentShader=e.fragmentShader.replace("uniform float opacity;","varying float opacity;")},t}}export{G as GltfViewer,B as GltfViewerOptions};
