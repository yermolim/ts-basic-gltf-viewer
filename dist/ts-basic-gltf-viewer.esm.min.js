import{BehaviorSubject as e,Subject as t,AsyncSubject as s}from"rxjs";import{AmbientLight as i,HemisphereLight as o,DirectionalLight as n,WebGLRenderer as h,sRGBEncoding as r,NoToneMapping as l,PerspectiveCamera as a,Scene as d,Mesh as c,Uint32BufferAttribute as g,Float32BufferAttribute as _,BufferGeometry as m,Box3 as u,Vector3 as p,WebGLRenderTarget as M,Color as y,MeshStandardMaterial as f,NoBlending as b,DoubleSide as v,MeshPhysicalMaterial as C,NormalBlending as S}from"three";import{GLTFLoader as P}from"three/examples/jsm/loaders/GLTFLoader";import{DRACOLoader as w}from"three/examples/jsm/loaders/DRACOLoader";import{OrbitControls as L}from"three/examples/jsm/controls/OrbitControls";import{ResizeSensor as I}from"css-element-queries";import{first as E}from"rxjs/operators";var x=function(e,t,s,i){return new(s||(s=Promise))((function(o,n){function h(e){try{l(i.next(e))}catch(e){n(e)}}function r(e){try{l(i.throw(e))}catch(e){n(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(h,r)}l((i=i.apply(e,t||[])).next())}))};class G{constructor(e,t,s,i,o,n){this.r=e,this.g=t,this.b=s,this.roughness=i,this.metalness=o,this.opacity=n}static createFromMaterial(e){return new G(e.color.r,e.color.g,e.color.b,e.roughness,e.metalness,e.opacity)}static deleteFromMesh(e,t=!1,s=!1){e[G.prop]=null,t&&(e[G.customProp]=null),s&&(e[G.defaultProp]=null)}static getDefaultFromMesh(e){return e[G.defaultProp]||(e[G.defaultProp]=G.createFromMaterial(e.material)),e[G.defaultProp]}static getCustomFromMesh(e){return e[G.customProp]}static getFromMesh(e){return e[G.prop]?e[G.prop]:e[G.customProp]?e[G.customProp]:G.getDefaultFromMesh(e)}static setCustomToMesh(e,t){e[G.customProp]=t}static setToMesh(e,t){e[G.prop]=t}}G.prop="rgbrmo",G.customProp="rgbrmoC",G.defaultProp="rgbrmoD";class A{constructor(e=null){this.dracoDecoderEnabled=!0,this.dracoDecoderPath="/assets/draco/",this.highlightingEnabled=!0,this.highlightingLatency=40,this.highlightColor=16776960,this.selectionColor=16711680,this.isolationColor=5592405,this.isolationOpacity=.2,this.physicalLights=!1,this.ambientLight=!0,this.ambientLightIntensity=1,this.hemiLight=!0,this.hemiLightIntensity=.4,this.dirLight=!0,this.dirLightIntensity=.6,this.useAntialiasing=!0,null!=e&&Object.assign(this,e)}}class R{constructor(s,i){if(this._initialized=new e(!1),this._modelLoadingStateChange=new e(!1),this._modelLoadingStart=new t,this._modelLoadingEnd=new t,this._modelLoadingProgress=new t,this._openedModelsChange=new e([]),this._selectionChange=new e(new Set),this._manualSelectionChange=new t,this._hlProp="highlighted",this._selProp="selected",this._isolProp="isolated",this._colProp="colored",this._subscriptions=[],this._lights=[],this._queuedColoring=null,this._queuedSelection=null,this._highlightedMesh=null,this._selectedMeshes=[],this._isolatedMeshes=[],this._coloredMeshes=[],this._pickingMeshById=new Map,this._meshByPickingColor=new Map,this._lastPickingColor=0,this._pointerEventHelper={downX:null,downY:null,maxDiff:10,mouseMoveTimer:null,waitForDouble:!1},this._loadingInProgress=!1,this._loadingQueue=[],this._loadedModels=new Set,this._loadedModelsByGuid=new Map,this._loadedModelsArray=[],this._loadedMeshes=new Set,this._loadedMeshesById=new Map,this._loadedMeshesArray=[],this._onCanvasPointerDown=e=>{this._pointerEventHelper.downX=e.clientX,this._pointerEventHelper.downY=e.clientY},this._onCanvasPointerUp=e=>{const t=e.clientX,s=e.clientY;!this._pointerEventHelper.downX||Math.abs(t-this._pointerEventHelper.downX)>this._pointerEventHelper.maxDiff||Math.abs(s-this._pointerEventHelper.downY)>this._pointerEventHelper.maxDiff||(this._pointerEventHelper.waitForDouble?(this._selectedMeshes.length&&(this.isolateSelectedMeshes(),this.fitCameraToObjects(this._selectedMeshes)),this._pointerEventHelper.waitForDouble=!1):(this._pointerEventHelper.waitForDouble=!0,setTimeout(()=>{this._pointerEventHelper.waitForDouble=!1},300),this.selectMeshAtPoint(t,s,e.ctrlKey)),this._pointerEventHelper.downX=null,this._pointerEventHelper.downY=null)},this._onCanvasMouseMove=e=>{e.buttons||(clearTimeout(this._pointerEventHelper.mouseMoveTimer),this._pointerEventHelper.mouseMoveTimer=null,this._pointerEventHelper.mouseMoveTimer=window.setTimeout(()=>{const t=e.clientX,s=e.clientY;this.highlightMeshAtPoint(t,s)},this._options.highlightingLatency))},this._container=document.getElementById(s),!this._container)throw new Error("Container not found!");this._options=new A(i),this.init()}init(){this._containerResizeSensor=new I(this._container,()=>{this.updateContainerDimensions(),this.updateRendererSize()}),this.initObservables(),this.initPickingScene(),this.initMaterials(),this.initLigths(),this.initLoader(),this.initRenderer(),this.initCameraWithControls(),this.addCanvasEventListeners(),this.render(),this._initialized.next(!0)}destroy(){var e,t,s,i,o,n,h,r;this._subscriptions.forEach(e=>e.unsubscribe()),this.closeSubjects(),null===(e=this._containerResizeSensor)||void 0===e||e.detach(),null===(t=this._renderer)||void 0===t||t.dispose(),null===(s=this._orbitControls)||void 0===s||s.dispose(),null===(o=null===(i=this._loader)||void 0===i?void 0:i.dracoLoader)||void 0===o||o.dispose(),null===(n=this._globalGeometry)||void 0===n||n.dispose(),null===(h=this._globalMaterial)||void 0===h||h.dispose(),this._loadedMeshes.forEach(e=>{e.geometry.dispose(),e.material.dispose()}),[...this._meshByPickingColor.values()].forEach(e=>{e.geometry.dispose(),e.material.dispose()}),null===(r=this._pickingTarget)||void 0===r||r.dispose()}openModelsAsync(e){return x(this,void 0,void 0,(function*(){if(!(null==e?void 0:e.length))return[];const t=[];e.forEach(e=>{const i=new s;this._loadingQueue.push({fileInfo:e,subject:i}),t.push(i.pipe(E()).toPromise())}),this.loadQueuedModelsAsync();return yield Promise.all(t)}))}closeModels(e){(null==e?void 0:e.length)&&this.removeLoadedModels(e)}selectItems(e){(null==e?void 0:e.length)&&(this._loadingInProgress?this._queuedSelection={ids:e,isolate:!1}:this.findAndSelectMeshes(e,!1,!0))}isolateItems(e){(null==e?void 0:e.length)&&(this._loadingInProgress?this._queuedSelection={ids:e,isolate:!0}:this.findAndSelectMeshes(e,!0,!0))}colorItems(e){this._loadingInProgress?this._queuedColoring=e:this.resetSelectionAndColorMeshes(e)}getOpenedModels(){return this._openedModelsChange.getValue()}getSelectedItems(){return this._selectionChange.getValue()}initObservables(){this.initialized$=this._initialized.asObservable(),this.modelLoadingStateChange$=this._modelLoadingStateChange.asObservable(),this.modelLoadingStart$=this._modelLoadingStart.asObservable(),this.modelLoadingProgress$=this._modelLoadingProgress.asObservable(),this.modelLoadingEnd$=this._modelLoadingEnd.asObservable(),this.openedModelsChange$=this._openedModelsChange.asObservable(),this.selectionChange$=this._selectionChange.asObservable(),this.manualSelectionChange$=this._manualSelectionChange.asObservable()}closeSubjects(){this._initialized.complete(),this._modelLoadingStateChange.complete(),this._modelLoadingStart.complete(),this._modelLoadingProgress.complete(),this._modelLoadingEnd.complete(),this._openedModelsChange.complete(),this._selectionChange.complete(),this._manualSelectionChange.complete()}addCanvasEventListeners(){this._renderer.domElement.addEventListener("pointerdown",this._onCanvasPointerDown),this._renderer.domElement.addEventListener("pointerup",this._onCanvasPointerUp),this._options.highlightingEnabled&&this._renderer.domElement.addEventListener("mousemove",this._onCanvasMouseMove)}initLigths(){if(this._options.ambientLight){const e=new i(2236962,this._options.physicalLights?this._options.ambientLightIntensity*Math.PI:this._options.ambientLightIntensity);this._lights.push(e)}if(this._options.hemiLight){const e=new o(16777147,526368,this._options.physicalLights?this._options.hemiLightIntensity*Math.PI:this._options.hemiLightIntensity);e.position.set(0,2e3,0),this._lights.push(e)}if(this._options.dirLight){const e=new n(16777215,this._options.physicalLights?this._options.dirLightIntensity*Math.PI:this._options.dirLightIntensity);e.position.set(-2,10,2),this._lights.push(e)}}initRenderer(){const e=new h({alpha:!0,antialias:this._options.useAntialiasing});e.setSize(this._containerWidth,this._containerHeight,!1),e.setClearColor(0,0),e.outputEncoding=r,e.physicallyCorrectLights=this._options.physicalLights,e.toneMapping=l,this._container.append(e.domElement),this._renderer=e}initCameraWithControls(){const e=new a(75,this._containerWidth/this._containerHeight,1,1e4),t=new L(e,this._renderer.domElement);t.addEventListener("change",()=>this.render()),e.position.set(0,1e3,1e3),e.lookAt(0,0,0),t.update(),this._camera=e,this._orbitControls=t}updateRenderScene(){this.rebuildRenderScene(),this._loadedMeshesArray.length&&this.fitCameraToObjects([this._renderScene]),this._globalGeometryIndicesNeedSort=!0,this.render()}rebuildRenderScene(){this._renderScene=null;const e=new d;if(e.add(...this._lights),this.rebuildGlobalGeometry(),this._globalGeometry){const t=new c(this._globalGeometry,this._globalMaterial);e.add(t)}this._renderScene=e}rebuildGlobalGeometry(){var e,t;if(this._globalGeometryIndicesByMesh=null,this._globalGeometryIndex=null,this._globalGeometryColor=null,this._globalGeometryRmo=null,this._globalGeometryPosition=null,null===(e=this._globalGeometry)||void 0===e||e.dispose(),this._globalGeometry=null,!(null===(t=this._loadedMeshesArray)||void 0===t?void 0:t.length))return;let s=0,i=0;if(this._loadedMeshesArray.forEach(e=>{s+=3*e.geometry.getAttribute("position").count,i+=e.geometry.getIndex().count}),0===s)return;const o=new g(new Uint32Array(i),1),n=new _(new Float32Array(s),3),h=new _(new Float32Array(s),3),r=new _(new Float32Array(s),3),l=new Map;let a=0,d=0;this._loadedMeshesArray.forEach(e=>{const t=e.geometry.clone().applyMatrix4(e.matrix),s=t.getAttribute("position").array,i=t.getIndex().array,c=new Uint32Array(i.length);l.set(e,c);for(let e=0;e<i.length;e++){const t=i[e]+a;o.setX(d++,t),c[e]=t}for(let t=0;t<s.length;){const i=G.getFromMesh(e);n.setXYZ(a,i.r,i.g,i.b),h.setXYZ(a,i.roughness,i.metalness,i.opacity),r.setXYZ(a++,s[t++],s[t++],s[t++])}t.dispose()});const c=new m;c.setIndex(o),c.setAttribute("color",n),c.setAttribute("rmo",h),c.setAttribute("position",r),this._globalGeometry=c,this._globalGeometryIndex=o,this._globalGeometryColor=n,this._globalGeometryRmo=h,this._globalGeometryPosition=r,this._globalGeometryIndicesByMesh=l}sortGlobalGeometryIndicesByOpacity(){if(!this._globalGeometry||!this._globalGeometryIndicesByMesh)return;let e=0;this._loadedMeshesArray.sort((e,t)=>G.getFromMesh(t).opacity-G.getFromMesh(e).opacity),this._loadedMeshesArray.forEach(t=>{this._globalGeometryIndicesByMesh.get(t).forEach(t=>{this._globalGeometryIndex.setX(e++,t)})}),this._globalGeometryIndex.needsUpdate=!0}render(){this._renderer&&(this._globalGeometryIndicesNeedSort&&(this.sortGlobalGeometryIndicesByOpacity(),this._globalGeometryIndicesNeedSort=!1),requestAnimationFrame(()=>{this._renderer.render(this._renderScene,this._camera)}))}fitCameraToObjects(e,t=1.2){if(!(null==e?void 0:e.length))return;const s=new u;for(const t of e)s.expandByObject(t);const i=s.getSize(new p),o=s.getCenter(new p),n=Math.max(i.x,i.y,i.z)/(2*Math.atan(Math.PI*this._camera.fov/360)),h=n/this._camera.aspect,r=t*Math.max(n,h),l=this._orbitControls.target.clone().sub(this._camera.position).normalize().multiplyScalar(r);this._orbitControls.maxDistance=Math.max(10*r,1e4),this._orbitControls.target.copy(o),this._camera.near=Math.min(r/100,1),this._camera.far=Math.max(100*r,1e4),this._camera.updateProjectionMatrix(),this._camera.position.copy(this._orbitControls.target).sub(l),this._orbitControls.update()}initPickingScene(){const e=new M(1,1),t=new d;t.background=new y(0),this._pickingTarget=e,this._pickingScene=t}nextPickingColor(){return++this._lastPickingColor}addMeshToPickingScene(e){const t=new f({color:new y(this.nextPickingColor()),emissive:new y(this._lastPickingColor),blending:b,flatShading:!0,side:v,roughness:1,metalness:0}),s=this._lastPickingColor.toString(16),i=new c(e.geometry,t);i.userData.originalUuid=e.uuid,i.userData.color=s,i.position.copy(e.position),i.rotation.copy(e.rotation),i.scale.copy(e.scale),this._pickingScene.add(i),this._pickingMeshById.set(e.uuid,i),this._meshByPickingColor.set(s,e)}removeMeshFromPickingScene(e){const t=this._pickingMeshById.get(e.uuid);t&&(this._pickingScene.remove(t),this._pickingMeshById.delete(e.uuid),this._meshByPickingColor.delete(t.userData.color))}getPickingPosition(e,t){const s=this._renderer.domElement.getBoundingClientRect();return{x:(e-s.left)*this._renderer.domElement.width/s.width,y:(t-s.top)*this._renderer.domElement.height/s.height}}getItemAtPickingPosition(e){const t=this._renderer.getPixelRatio();this._camera.setViewOffset(this._renderer.getContext().drawingBufferWidth,this._renderer.getContext().drawingBufferHeight,e.x*t||0,e.y*t||0,1,1);const s=new n(16777215,1);s.position.set(-1,2,4),this._camera.add(s),this._renderer.setRenderTarget(this._pickingTarget),this._renderer.render(this._pickingScene,this._camera),this._renderer.setRenderTarget(null),this._camera.clearViewOffset(),this._camera.remove(s);const i=new Uint8Array(4);this._renderer.readRenderTargetPixels(this._pickingTarget,0,0,1,1,i);const o=i[0]<<16|i[1]<<8|i[2];return this._meshByPickingColor.get(o.toString(16))}updateContainerDimensions(){const e=this._container.getBoundingClientRect();this._containerWidth=e.width,this._containerHeight=e.height}updateRendererSize(){this._renderer&&(this._camera.aspect=this._containerWidth/this._containerHeight,this._camera.updateProjectionMatrix(),this._renderer.setSize(this._containerWidth,this._containerHeight,!1),this.render())}initLoader(){const e=new P;if(this._options.dracoDecoderEnabled){const t=new w;t.setDecoderPath(this._options.dracoDecoderPath),t.preload(),e.setDRACOLoader(t)}this._loader=e,this.loadQueuedModelsAsync()}loadQueuedModelsAsync(){return x(this,void 0,void 0,(function*(){if(this._loader&&!this._loadingInProgress){for(this._loadingInProgress=!0,this._modelLoadingStateChange.next(!0);this._loadingQueue.length>0;){const{fileInfo:e,subject:t}=this._loadingQueue.shift(),{url:s,guid:i,name:o}=e,n=this._loadedModelsByGuid.has(i)?{url:s,guid:i}:yield this.loadModel(s,i,o);t.next(n),t.complete()}this.runQueuedColoring(!1),this.runQueuedSelection(!1),this.updateRenderScene(),this._modelLoadingStateChange.next(!1),this._loadingInProgress=!1}}))}removeLoadedModels(e){e.forEach(e=>{this.removeModelFromLoaded(e)}),this.updateRenderScene()}loadModel(e,t,s){return x(this,void 0,void 0,(function*(){let i;this.onModelLoadingStart(e,t);try{const i=yield this._loader.loadAsync(e,s=>this.onModelLoadingProgress(s,e,t));this.addModelToLoaded(i,t,s)}catch(e){i=e}const o={url:e,guid:t,error:i};return this.onModelLoadingEnd(o),o}))}onModelLoadingStart(e,t){this._modelLoadingStart.next({url:e,guid:t})}onModelLoadingProgress(e,t,s){const i=Math.round(e.loaded/e.total*100);this._modelLoadingProgress.next({url:t,guid:s,progress:i})}onModelLoadingEnd(e){const{url:t,guid:s}=e;this._modelLoadingProgress.next({url:t,guid:s,progress:0}),this._modelLoadingEnd.next(e)}addModelToLoaded(e,t,s){const i=s||t,o=e.scene;o.userData.guid=t,o.name=i;const n=[],h=new Set;o.traverse(e=>{if(e instanceof c&&e.geometry instanceof m&&e.material instanceof f){const s=`${t}|${e.name}`;e.userData.id=s,e.userData.modelGuid=t,this.addMeshToPickingScene(e),this._loadedMeshes.add(e),this._loadedMeshesById.has(s)?this._loadedMeshesById.get(s).push(e):this._loadedMeshesById.set(s,[e]),n.push(e),h.add(e.name)}});const r={gltf:e,meshes:n,handles:h,name:i};this._loadedModels.add(r),this._loadedModelsByGuid.set(t,r),this.updateModelsDataArrays(),this.emitOpenedModelsChanged()}removeModelFromLoaded(e){if(!this._loadedModelsByGuid.has(e))return;const t=this._loadedModelsByGuid.get(e);t.meshes.forEach(e=>{var t;this._loadedMeshes.delete(e),this._loadedMeshesById.delete(e.userData.id),this.removeMeshFromPickingScene(e),null===(t=e.geometry)||void 0===t||t.dispose()}),this._highlightedMesh=null,this._selectedMeshes=this._selectedMeshes.filter(t=>t.userData.modelGuid!==e),this._isolatedMeshes=this._isolatedMeshes.filter(t=>t.userData.modelGuid!==e),this._coloredMeshes=this._coloredMeshes.filter(t=>t.userData.modelGuid!==e),this._loadedModels.delete(t),this._loadedModelsByGuid.delete(e),this.updateModelsDataArrays(),this.emitOpenedModelsChanged()}updateModelsDataArrays(){this._loadedModelsArray=[...this._loadedModels],this._loadedMeshesArray=[...this._loadedMeshes]}emitOpenedModelsChanged(){const e=[];for(const[t,s]of this._loadedModelsByGuid)e.push({guid:t,name:s.name,handles:s.handles});this._openedModelsChange.next(e)}runQueuedColoring(e=!0){this._queuedColoring&&this.resetSelectionAndColorMeshes(this._queuedColoring,e)}resetSelectionAndColorMeshes(e,t=!0){this.removeIsolation(),this.removeSelection(),this.colorMeshes(e,t)}colorMeshes(e,t){if(this.removeColoring(),null==e?void 0:e.length)for(const t of e){const e=new y(t.color),s=new G(e.r,e.g,e.b,1,0,t.opacity);t.ids.forEach(e=>{const t=this._loadedMeshesById.get(e);(null==t?void 0:t.length)&&t.forEach(e=>{e[this._colProp]=!0,G.setCustomToMesh(e,s),this.refreshMeshRgbRmo(e),this._coloredMeshes.push(e)})})}t&&this.render()}removeColoring(){for(const e of this._coloredMeshes)e[this._colProp]=void 0,G.deleteFromMesh(e,!0),this.refreshMeshRgbRmo(e);this._coloredMeshes.length=0}runQueuedSelection(e){if(this._queuedSelection){const{ids:t,isolate:s}=this._queuedSelection;this.findAndSelectMeshes(t,s,e)}}findAndSelectMeshes(e,t,s){const{found:i}=this.findMeshesByIds(new Set(e));i.length&&this.selectMeshes(i,!1,t,s)}findMeshesByIds(e){const t=[],s=new Set;return e.forEach(e=>{this._loadedMeshesById.has(e)?t.push(...this._loadedMeshesById.get(e)):s.add(e)}),{found:t,notFound:s}}removeSelection(){for(const e of this._selectedMeshes)e[this._selProp]=void 0,this.refreshMeshRgbRmo(e);this._selectedMeshes.length=0}removeIsolation(){for(const e of this._isolatedMeshes)e[this._isolProp]=void 0,this.refreshMeshRgbRmo(e);this._isolatedMeshes.length=0}selectMeshAtPoint(e,t,s){const i=this.getPickingPosition(e,t),o=this.getItemAtPickingPosition(i);o?s?o[this._selProp]?this.removeFromSelection(o):this.addToSelection(o):this.selectMeshes([o],!0,!1,!0):this.selectMeshes([],!0,!1,!0)}addToSelection(e){const t=[e,...this._selectedMeshes];return this.selectMeshes(t,!0,!1,!0),!0}removeFromSelection(e){const t=this._selectedMeshes.filter(t=>t!==e);return this.selectMeshes(t,!0,!1,!0),!0}selectMeshes(e,t,s,i){if(this.removeSelection(),this.removeIsolation(),!(null==e?void 0:e.length))return this.emitSelectionChanged(t,i),null;e.forEach(e=>{e[this._selProp]=!0,this.refreshMeshRgbRmo(e)}),s&&this.isolateSelectedMeshes(),this._selectedMeshes=e,this.emitSelectionChanged(t,i)}isolateSelectedMeshes(){this._loadedMeshesArray.forEach(e=>{e[this._selProp]||(e[this._isolProp]=!0,this.refreshMeshRgbRmo(e),this._isolatedMeshes.push(e))})}emitSelectionChanged(e,t){e||this.fitCameraToObjects(this._selectedMeshes),t&&this.render();const s=new Set;this._selectedMeshes.forEach(e=>s.add(e.userData.id)),this._selectionChange.next(s),e&&this._manualSelectionChange.next(s)}highlightMeshAtPoint(e,t){const s=this.getPickingPosition(e,t),i=this.getItemAtPickingPosition(s);this.highlightItem(i)}highlightItem(e){e!==this._highlightedMesh&&(this.removeHighlighting(),e&&(e[this._hlProp]=!0,this.refreshMeshRgbRmo(e),this._highlightedMesh=e),this.render())}removeHighlighting(){if(this._highlightedMesh){const e=this._highlightedMesh;e[this._hlProp]=void 0,this.refreshMeshRgbRmo(e),this._highlightedMesh=null}}initMaterials(){const e=new y(this._options.isolationColor),t=new G(e.r,e.g,e.b,1,0,this._options.isolationOpacity),s=new y(this._options.selectionColor),i=new y(this._options.highlightColor);this._globalMaterial=this.buildGlobalMaterial(!0),this._isolationColor=t,this._selectionColor=s,this._highlightColor=i}buildGlobalMaterial(e){const t=new C({vertexColors:!0,flatShading:!0,blending:S,side:v,transparent:e});return t.onBeforeCompile=e=>{e.vertexShader="\n        attribute vec3 rmo;        \n        varying float roughness;\n        varying float metalness;\n        varying float opacity;\n        "+e.vertexShader,e.vertexShader=e.vertexShader.replace("void main() {","\n        void main() {\n          roughness = rmo.x;\n          metalness = rmo.y;\n          opacity = rmo.z;\n        "),e.fragmentShader=e.fragmentShader.replace("uniform float roughness;","varying float roughness;"),e.fragmentShader=e.fragmentShader.replace("uniform float metalness;","varying float metalness;"),e.fragmentShader=e.fragmentShader.replace("uniform float opacity;","varying float opacity;")},t}refreshMeshRgbRmo(e){if(!e)return;e[this._isolProp]||G.deleteFromMesh(e);const t=G.getFromMesh(e);e[this._hlProp]?G.setToMesh(e,new G(this._highlightColor.r,this._highlightColor.g,this._highlightColor.b,t.roughness,t.metalness,t.opacity)):e[this._selProp]?G.setToMesh(e,new G(this._selectionColor.r,this._selectionColor.g,this._selectionColor.b,t.roughness,t.metalness,t.opacity)):e[this._isolProp]&&G.setToMesh(e,this._isolationColor);const s=G.getFromMesh(e);this._globalGeometryIndicesByMesh.get(e).forEach(e=>{this._globalGeometryColor.setXYZ(e,s.r,s.g,s.b),this._globalGeometryRmo.setXYZ(e,s.roughness,s.metalness,s.opacity)}),this._globalGeometryColor.needsUpdate=!0,this._globalGeometryRmo.needsUpdate=!0,s.opacity!==t.opacity&&(this._globalGeometryIndicesNeedSort=!0)}}export{R as GltfViewer,A as GltfViewerOptions};
