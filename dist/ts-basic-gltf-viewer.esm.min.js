import{BehaviorSubject as e,Subject as t,AsyncSubject as i}from"rxjs";import{AmbientLight as s,HemisphereLight as o,DirectionalLight as n,WebGLRenderer as h,sRGBEncoding as r,NoToneMapping as a,PerspectiveCamera as l,Scene as d,Box3 as c,Vector3 as g,WebGLRenderTarget as _,Color as u,MeshStandardMaterial as m,NoBlending as p,DoubleSide as M,Mesh as f,MeshPhysicalMaterial as v,NormalBlending as C}from"three";import{GLTFLoader as S}from"three/examples/jsm/loaders/GLTFLoader";import{DRACOLoader as P}from"three/examples/jsm/loaders/DRACOLoader";import{OrbitControls as w}from"three/examples/jsm/controls/OrbitControls";import{ResizeSensor as b}from"css-element-queries";import{first as L}from"rxjs/operators";var y=function(e,t,i,s){return new(i||(i=Promise))((function(o,n){function h(e){try{a(s.next(e))}catch(e){n(e)}}function r(e){try{a(s.throw(e))}catch(e){n(e)}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(h,r)}a((s=s.apply(e,t||[])).next())}))};class E{constructor(e=null){this.dracoDecoderEnabled=!0,this.dracoDecoderPath="/assets/draco/",this.highlightingEnabled=!0,this.highlightingLatency=300,this.highlightColor=16776960,this.highlightEmissive=0,this.selectionColor=16711680,this.selectionEmissive=16711680,this.isolationColor=5592405,this.isolationEmissive=0,this.isolationOpacity=.2,this.physicalLights=!1,this.ambientLight=!0,this.ambientLightIntensity=1,this.hemiLight=!0,this.hemiLightIntensity=.4,this.dirLight=!0,this.dirLightIntensity=.6,this.useAntialiasing=!0,null!=e&&Object.assign(this,e)}}class I{constructor(i,s){if(this._initialized=new e(!1),this._modelLoadingStateChange=new e(!1),this._modelLoadingStart=new t,this._modelLoadingEnd=new t,this._modelLoadingProgress=new t,this._openedModelsChange=new e([]),this._selectionChange=new e(new Set),this._manualSelectionChange=new t,this._bakMatProp="materialBackup",this._colMatProp="materialColored",this._hlProp="highlighted",this._selProp="selected",this._isolProp="isolated",this._colProp="colored",this._subscriptions=[],this._lights=[],this._queuedColoring=null,this._queuedSelection=null,this._highlightedMesh=null,this._selectedMeshes=[],this._isolatedMeshes=[],this._coloredMeshes=[],this._pickingColorToMesh=new Map,this._lastPickingColor=0,this._pointerEventHelper={downX:null,downY:null,maxDiff:10,mouseMoveTimer:null,waitForDouble:!1},this._loadingInProgress=!1,this._loadingQueue=[],this._loadedModelsByGuid=new Map,this._loadedMeshesById=new Map,this._loadedGroups=new Set,this._onCanvasPointerDown=e=>{this._pointerEventHelper.downX=e.clientX,this._pointerEventHelper.downY=e.clientY},this._onCanvasPointerUp=e=>{const t=e.clientX,i=e.clientY;!this._pointerEventHelper.downX||Math.abs(t-this._pointerEventHelper.downX)>this._pointerEventHelper.maxDiff||Math.abs(i-this._pointerEventHelper.downY)>this._pointerEventHelper.maxDiff||(this._pointerEventHelper.waitForDouble?(this._selectedMeshes.length&&(this.isolateSelectedMeshes(),this.fitCameraToObjects(this._selectedMeshes)),this._pointerEventHelper.waitForDouble=!1):(this._pointerEventHelper.waitForDouble=!0,setTimeout(()=>{this._pointerEventHelper.waitForDouble=!1},300),this.selectMeshAtPoint(t,i,e.ctrlKey)),this._pointerEventHelper.downX=null,this._pointerEventHelper.downY=null)},this._onCanvasMouseMove=e=>{e.buttons||(clearTimeout(this._pointerEventHelper.mouseMoveTimer),this._pointerEventHelper.mouseMoveTimer=null,this._pointerEventHelper.mouseMoveTimer=window.setTimeout(()=>{const t=e.clientX,i=e.clientY;this.highlightMeshAtPoint(t,i)},this._options.highlightingLatency))},this._container=document.getElementById(i),!this._container)throw new Error("Container not found!");this._options=new E(s),this.init()}init(){this._containerResizeSensor=new b(this._container,()=>{this.updateContainerDimensions(),this.updateRendererSize()}),this.initObservables(),this.initPickingScene(),this.initSpecialMaterials(),this.initLigths(),this.initLoader(),this.initRenderer(),this.initCameraWithControls(),this.addCanvasEventListeners(),this.render(),this._initialized.next(!0)}destroy(){var e;this._subscriptions.forEach(e=>e.unsubscribe()),this.closeSubjects(),this._renderer&&this._renderer.dispose(),this._orbitControls&&this._orbitControls.dispose(),(null===(e=this._loader)||void 0===e?void 0:e.dracoLoader)&&this._loader.dracoLoader.dispose(),this._containerResizeSensor&&this._containerResizeSensor.detach()}openModelsAsync(e){return y(this,void 0,void 0,(function*(){if(!(null==e?void 0:e.length))return[];const t=[];e.forEach(e=>{const s=new i;this._loadingQueue.push({fileInfo:e,subject:s}),t.push(s.pipe(L()).toPromise())}),this.loadQueuedModelsAsync();return yield Promise.all(t)}))}closeModels(e){(null==e?void 0:e.length)&&e.forEach(e=>{this.removeModelFromLoaded(e)})}selectItems(e){(null==e?void 0:e.length)&&(this._loadingInProgress?this._queuedSelection={ids:e,isolate:!1}:this.findAndSelectMeshes(e,!1,!0))}isolateItems(e){(null==e?void 0:e.length)&&(this._loadingInProgress?this._queuedSelection={ids:e,isolate:!0}:this.findAndSelectMeshes(e,!0,!0))}colorItems(e){this._loadingInProgress?this._queuedColoring=e:this.resetSelectionAndColorMeshes(e)}getOpenedModels(){return this._openedModelsChange.getValue()}getSelectedItems(){return this._selectionChange.getValue()}initObservables(){this.initialized$=this._initialized.asObservable(),this.modelLoadingStateChange$=this._modelLoadingStateChange.asObservable(),this.modelLoadingStart$=this._modelLoadingStart.asObservable(),this.modelLoadingProgress$=this._modelLoadingProgress.asObservable(),this.modelLoadingEnd$=this._modelLoadingEnd.asObservable(),this.openedModelsChange$=this._openedModelsChange.asObservable(),this.selectionChange$=this._selectionChange.asObservable(),this.manualSelectionChange$=this._manualSelectionChange.asObservable()}closeSubjects(){this._initialized.complete(),this._modelLoadingStateChange.complete(),this._modelLoadingStart.complete(),this._modelLoadingProgress.complete(),this._modelLoadingEnd.complete(),this._openedModelsChange.complete(),this._selectionChange.complete(),this._manualSelectionChange.complete()}addCanvasEventListeners(){this._renderer.domElement.addEventListener("pointerdown",this._onCanvasPointerDown),this._renderer.domElement.addEventListener("pointerup",this._onCanvasPointerUp),this._options.highlightingEnabled&&this._renderer.domElement.addEventListener("mousemove",this._onCanvasMouseMove)}initLigths(){if(this._options.ambientLight){const e=new s(2236962,this._options.physicalLights?this._options.ambientLightIntensity*Math.PI:this._options.ambientLightIntensity);this._lights.push(e)}if(this._options.hemiLight){const e=new o(16777147,526368,this._options.physicalLights?this._options.hemiLightIntensity*Math.PI:this._options.hemiLightIntensity);e.position.set(0,2e3,0),this._lights.push(e)}if(this._options.dirLight){const e=new n(16777215,this._options.physicalLights?this._options.dirLightIntensity*Math.PI:this._options.dirLightIntensity);e.position.set(-2,10,2),this._lights.push(e)}}initRenderer(){const e=new h({alpha:!0,antialias:this._options.useAntialiasing});e.setSize(this._containerWidth,this._containerHeight,!1),e.setClearColor(0,0),e.outputEncoding=r,e.physicallyCorrectLights=this._options.physicalLights,e.toneMapping=a,this._container.append(e.domElement),this._renderer=e}initCameraWithControls(){const e=new l(75,this._containerWidth/this._containerHeight,.01,1e4),t=new w(e,this._renderer.domElement);t.addEventListener("change",()=>this.render()),e.position.set(0,1e3,1e3),e.lookAt(0,0,0),t.update(),this._camera=e,this._orbitControls=t}refreshRenderScene(){const e=new d;e.add(...this._lights),this._loadedGroups.size&&e.add(...this._loadedGroups),this._renderScene=e}render(){this._renderer&&(this._renderScene||this.refreshRenderScene(),requestAnimationFrame(()=>{this._renderer.render(this._renderScene,this._camera)}))}fitCameraToObjects(e,t=1.2){if(!(null==e?void 0:e.length))return;const i=new c;for(const t of e)i.expandByObject(t);const s=i.getSize(new g),o=i.getCenter(new g),n=Math.max(s.x,s.y,s.z)/(2*Math.atan(Math.PI*this._camera.fov/360)),h=n/this._camera.aspect,r=t*Math.max(n,h),a=this._orbitControls.target.clone().sub(this._camera.position).normalize().multiplyScalar(r);this._orbitControls.maxDistance=Math.max(10*r,1e4),this._orbitControls.target.copy(o),this._camera.near=Math.min(r/100,.01),this._camera.far=Math.max(100*r,1e4),this._camera.updateProjectionMatrix(),this._camera.position.copy(this._orbitControls.target).sub(a),this._orbitControls.update()}initPickingScene(){const e=new _(1,1),t=new d;t.background=new u(0),this._pickingTarget=e,this._pickingScene=t}nextPickingColor(){return++this._lastPickingColor}addMeshToPickingScene(e){const t=new m({color:new u(this.nextPickingColor()),emissive:new u(this._lastPickingColor),blending:p,flatShading:!0,side:M,roughness:1,metalness:0}),i=this._lastPickingColor.toString(16),s=new f(e.geometry,t);s.userData.originalUuid=e.uuid,s.userData.color=i,s.position.copy(e.position),s.rotation.copy(e.rotation),s.scale.copy(e.scale),this._pickingScene.add(s),this._pickingColorToMesh.set(i,e)}removeMeshFromPickingScene(e){const t=this._pickingScene.children.find(t=>t.userData.originalUuid===e.uuid);t&&(this._pickingScene.remove(t),this._pickingColorToMesh.delete(t.userData.color))}getPickingPosition(e,t){const i=this._renderer.domElement.getBoundingClientRect();return{x:(e-i.left)*this._renderer.domElement.width/i.width,y:(t-i.top)*this._renderer.domElement.height/i.height}}getItemAtPickingPosition(e){const t=this._renderer.getPixelRatio();this._camera.setViewOffset(this._renderer.getContext().drawingBufferWidth,this._renderer.getContext().drawingBufferHeight,e.x*t||0,e.y*t||0,1,1);const i=new n(16777215,1);i.position.set(-1,2,4),this._camera.add(i),this._renderer.setRenderTarget(this._pickingTarget),this._renderer.render(this._pickingScene,this._camera),this._renderer.setRenderTarget(null),this._camera.clearViewOffset(),this._camera.remove(i);const s=new Uint8Array(4);this._renderer.readRenderTargetPixels(this._pickingTarget,0,0,1,1,s);const o=s[0]<<16|s[1]<<8|s[2];return this._pickingColorToMesh.get(o.toString(16))}updateContainerDimensions(){const e=this._container.getBoundingClientRect();this._containerWidth=e.width,this._containerHeight=e.height}updateRendererSize(){this._renderer&&(this._camera.aspect=this._containerWidth/this._containerHeight,this._camera.updateProjectionMatrix(),this._renderer.setSize(this._containerWidth,this._containerHeight,!1),this.render())}initLoader(){const e=new S;if(this._options.dracoDecoderEnabled){const t=new P;t.setDecoderPath(this._options.dracoDecoderPath),t.preload(),e.setDRACOLoader(t)}this._loader=e,this.loadQueuedModelsAsync()}loadQueuedModelsAsync(){return y(this,void 0,void 0,(function*(){if(this._loader&&!this._loadingInProgress){for(this._loadingInProgress=!0,this._modelLoadingStateChange.next(!0);this._loadingQueue.length>0;){const{fileInfo:e,subject:t}=this._loadingQueue.shift(),{url:i,guid:s,name:o}=e,n=this._loadedModelsByGuid.has(s)?{url:i,guid:s}:yield this.loadModel(i,s,o);t.next(n),t.complete()}this.runQueuedColoring(!1),this.runQueuedSelection(!1),this.render(),this._modelLoadingStateChange.next(!1),this._loadingInProgress=!1}}))}loadModel(e,t,i){return y(this,void 0,void 0,(function*(){let s;this.onModelLoadingStart(e,t);try{const s=yield this._loader.loadAsync(e,i=>this.onModelLoadingProgress(i,e,t));this.addModelToLoaded(s,t,i)}catch(e){s=e}const o={url:e,guid:t,error:s};return this.onModelLoadingEnd(o),o}))}onModelLoadingStart(e,t){this._modelLoadingStart.next({url:e,guid:t})}onModelLoadingProgress(e,t,i){const s=Math.round(e.loaded/e.total*100);this._modelLoadingProgress.next({url:t,guid:i,progress:s})}onModelLoadingEnd(e){const{url:t,guid:i}=e;this._modelLoadingProgress.next({url:t,guid:i,progress:0}),this._modelLoadingEnd.next(e)}addModelToLoaded(e,t,i){const s=i||t,o=e.scene;o.userData.guid=t,o.name=s;const n=[],h=new Set;o.traverse(e=>{if(e instanceof f){const i=`${t}|${e.name}`;e.userData.id=i,e.userData.modelGuid=t,this.backupMeshMaterial(e),this._loadedMeshesById.has(i)?this._loadedMeshesById.get(i).push(e):this._loadedMeshesById.set(i,[e]),this.addMeshToPickingScene(e),n.push(e),h.add(e.name)}}),this._loadedGroups.add(o),this._loadedModelsByGuid.set(t,{gltf:e,meshes:n,handles:h,name:s}),this.emitOpenedModelsChanged()}removeModelFromLoaded(e){if(!this._loadedModelsByGuid.has(e))return;const t=this._loadedModelsByGuid.get(e);t.meshes.forEach(e=>{var t;this._loadedMeshesById.delete(e.userData.id),this.removeMeshFromPickingScene(e),null===(t=e.geometry)||void 0===t||t.dispose()}),this._highlightedMesh=null,this._selectedMeshes=this._selectedMeshes.filter(t=>t.userData.modelGuid!==e),this._isolatedMeshes=this._isolatedMeshes.filter(t=>t.userData.modelGuid!==e),this._coloredMeshes=this._coloredMeshes.filter(t=>t.userData.modelGuid!==e),this._loadedGroups.delete(t.gltf.scene),this._loadedModelsByGuid.delete(e),this.emitOpenedModelsChanged()}emitOpenedModelsChanged(){const e=[];for(const[t,i]of this._loadedModelsByGuid)e.push({guid:t,name:i.name,handles:i.handles});this._openedModelsChange.next(e),this.refreshRenderScene(),(null==e?void 0:e.length)&&this.fitCameraToObjects([this._renderScene]),this.render()}runQueuedColoring(e=!0){this._queuedColoring&&this.resetSelectionAndColorMeshes(this._queuedColoring,e)}resetSelectionAndColorMeshes(e,t=!0){this.removeIsolation(),this.removeSelection(),this.colorMeshes(e,t)}colorMeshes(e,t){if(this.removeColoring(),null==e?void 0:e.length)for(const t of e){const e=new v({color:new u(t.color),emissive:new u(0),blending:C,flatShading:!0,side:M,roughness:1,metalness:0,opacity:t.opacity,transparent:t.opacity<1});t.ids.forEach(t=>{const i=this._loadedMeshesById.get(t);(null==i?void 0:i.length)&&i.forEach(t=>{t[this._colProp]=!0,t[this._colMatProp]=e,t.material=e,this._coloredMeshes.push(t)})})}t&&this.render()}removeColoring(){for(const e of this._coloredMeshes)e[this._colProp]=void 0,this.refreshMeshMaterial(e);this._coloredMeshes.length=0}runQueuedSelection(e){if(this._queuedSelection){const{ids:t,isolate:i}=this._queuedSelection;this.findAndSelectMeshes(t,i,e)}}findAndSelectMeshes(e,t,i){const{found:s}=this.findMeshesByIds(new Set(e));s.length&&this.selectMeshes(s,!1,t,i)}findMeshesByIds(e){const t=[],i=new Set;return e.forEach(e=>{this._loadedMeshesById.has(e)?t.push(...this._loadedMeshesById.get(e)):i.add(e)}),{found:t,notFound:i}}removeSelection(){for(const e of this._selectedMeshes)e[this._selProp]=void 0,this.refreshMeshMaterial(e);this._selectedMeshes.length=0}removeIsolation(){for(const e of this._isolatedMeshes)e[this._isolProp]=void 0,this.refreshMeshMaterial(e);this._isolatedMeshes.length=0}selectMeshAtPoint(e,t,i){const s=this.getPickingPosition(e,t),o=this.getItemAtPickingPosition(s);o?i?o[this._selProp]?this.removeFromSelection(o):this.addToSelection(o):this.selectMeshes([o],!0,!1,!0):this.selectMeshes([],!0,!1,!0)}addToSelection(e){const t=[e,...this._selectedMeshes];return this.selectMeshes(t,!0,!1,!0),!0}removeFromSelection(e){const t=this._selectedMeshes.filter(t=>t!==e);return this.selectMeshes(t,!0,!1,!0),!0}selectMeshes(e,t,i,s){if(this.removeSelection(),this.removeIsolation(),!(null==e?void 0:e.length))return this.emitSelectionChanged(t,s),null;e.forEach(e=>{e[this._selProp]=!0,this.refreshMeshMaterial(e)}),i&&this.isolateSelectedMeshes(),this._selectedMeshes=e,this.emitSelectionChanged(t,s)}isolateSelectedMeshes(){[...this._loadedMeshesById.values()].flatMap(e=>e).forEach(e=>{e[this._selProp]||(e[this._isolProp]=!0,this.refreshMeshMaterial(e),this._isolatedMeshes.push(e))})}emitSelectionChanged(e,t){e||this.fitCameraToObjects(this._selectedMeshes),t&&this.render();const i=new Set;this._selectedMeshes.forEach(e=>i.add(e.userData.id)),this._selectionChange.next(i),e&&this._manualSelectionChange.next(i)}highlightMeshAtPoint(e,t){const i=this.getPickingPosition(e,t),s=this.getItemAtPickingPosition(i);this.highlightItem(s)}highlightItem(e){e!==this._highlightedMesh&&(this.removeHighlighting(),e&&(e[this._hlProp]=!0,this.refreshMeshMaterial(e),this._highlightedMesh=e),this.render())}removeHighlighting(){if(this._highlightedMesh){const e=this._highlightedMesh;e[this._hlProp]=void 0,this.refreshMeshMaterial(e),this._highlightedMesh=null}}initSpecialMaterials(){const e=new v({color:new u(this._options.highlightColor),emissive:new u(this._options.highlightEmissive),blending:C,flatShading:!0,side:M,roughness:1,metalness:0}),t=new v({color:new u(this._options.selectionColor),emissive:new u(this._options.selectionEmissive),blending:C,flatShading:!0,side:M,roughness:1,metalness:0}),i=new v({color:new u(this._options.isolationColor),emissive:new u(this._options.isolationEmissive),blending:C,flatShading:!0,side:M,roughness:1,metalness:0,opacity:this._options.isolationOpacity,transparent:!0});this._selectionMaterial=t,this._highlightMaterial=e,this._isolationMaterial=i}backupMeshMaterial(e){e[this._bakMatProp]=e.material}refreshMeshMaterial(e){e[this._hlProp]?e.material=this._highlightMaterial:e[this._selProp]?e.material=this._selectionMaterial:e[this._isolProp]?e.material=this._isolationMaterial:e[this._colProp]?e.material=e[this._colMatProp]:e.material=e[this._bakMatProp]}}export{I as GltfViewer,E as GltfViewerOptions};
